### YamlMime:PythonClass
uid: botbuilder.core.transcript_logger.TranscriptStore
name: TranscriptStore
fullName: botbuilder.core.transcript_logger.TranscriptStore
module: botbuilder.core.transcript_logger
inheritances:
- botbuilder.core.transcript_logger.TranscriptLogger
summary: Transcript storage for conversations.
constructor:
  syntax: TranscriptStore()
methods:
- uid: botbuilder.core.transcript_logger.TranscriptStore.delete_transcript
  name: delete_transcript
  summary: 'Delete a specific conversation and all of it''s activities.

    :param channel_id: Channel Id where conversation took place.

    :param conversation_id: Id of the conversation to delete.

    :result: None'
  signature: 'abstract async delete_transcript(channel_id: str, conversation_id: str)
    -> None'
  parameters:
  - name: channel_id
    isRequired: true
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.transcript_logger.TranscriptStore.get_transcript_activities
  name: get_transcript_activities
  summary: 'Get activities for a conversation (Aka the transcript).

    :param channel_id: Channel Id where conversation took place.

    :param conversation_id: Conversation ID

    :param continuation_token: Continuation token to page through results.

    :param start_date: Earliest time to include

    :result: Page of results of Activity objects'
  signature: 'abstract async get_transcript_activities(channel_id: str, conversation_id:
    str, continuation_token: str, start_date: <module ''datetime'' from ''C:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\datetime.py''>)
    -> botbuilder.core.transcript_logger.PagedResult'
  parameters:
  - name: channel_id
    isRequired: true
  - name: conversation_id
    isRequired: true
  - name: continuation_token
    isRequired: true
  - name: start_date
    isRequired: true
- uid: botbuilder.core.transcript_logger.TranscriptStore.list_transcripts
  name: list_transcripts
  summary: 'List conversations in the channelId.

    :param channel_id: Channel Id where conversation took place.

    :param continuation_token : Continuation token to page through results.

    :result: Page of results of TranscriptInfo objects'
  signature: 'abstract async list_transcripts(channel_id: str, continuation_token:
    str) -> botbuilder.core.transcript_logger.PagedResult'
  parameters:
  - name: channel_id
    isRequired: true
  - name: continuation_token
    isRequired: true
