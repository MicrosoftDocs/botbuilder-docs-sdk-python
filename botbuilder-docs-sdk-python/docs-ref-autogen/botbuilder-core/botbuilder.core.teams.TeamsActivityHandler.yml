### YamlMime:PythonClass
uid: botbuilder.core.teams.TeamsActivityHandler
name: TeamsActivityHandler
fullName: botbuilder.core.teams.TeamsActivityHandler
module: botbuilder.core.teams
inheritances:
- botbuilder.core.activity_handler.ActivityHandler
constructor:
  syntax: TeamsActivityHandler()
methods:
- uid: botbuilder.core.teams.TeamsActivityHandler.on_conversation_update_activity
  name: on_conversation_update_activity
  summary: 'Invoked when a conversation update activity is received from the channel.

    Conversation update activities are useful when it comes to responding to users

    being added to or removed from the channel.

    For example, a bot could respond to a user being added by greeting the user.'
  signature: 'on_conversation_update_activity(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
  remarks: 'In a derived class, override this method to add logic that applies

    to all conversation update activities.

    '
- uid: botbuilder.core.teams.TeamsActivityHandler.on_invoke_activity
  name: on_invoke_activity
  summary: 'Invoked when an invoke activity is received from the connector.

    Invoke activities can be used to communicate many different things.'
  signature: 'on_invoke_activity(turn_context: botbuilder.core.turn_context.TurnContext)
    -> botbuilder.core.invoke_response.InvokeResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: An InvokeResponse that represents the work queued to execute.
  remarks: 'Invoke activities communicate programmatic commands from a client or channel
    to a bot.

    The meaning of an invoke activity is defined by the "invoke_activity.name" property,

    which is meaningful within the scope of a channel.

    '
- uid: botbuilder.core.teams.TeamsActivityHandler.on_sign_in_invoke
  name: on_sign_in_invoke
  summary: Invoked when a signIn invoke activity is received from the connector.
  signature: 'on_sign_in_invoke(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_app_based_link_query
  name: on_teams_app_based_link_query
  summary: Invoked when an app based link query activity is received from the connector.
  signature: 'on_teams_app_based_link_query(turn_context: botbuilder.core.turn_context.TurnContext,
    query: botbuilder.schema.teams._models_py3.AppBasedLinkQuery) -> botbuilder.schema.teams._models_py3.MessagingExtensionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: query
    description: The invoke request body type for app-based link query.
    isRequired: true
  return:
    description: The Messaging Extension Response for the query.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_card_action_invoke
  name: on_teams_card_action_invoke
  summary: Invoked when an card action invoke activity is received from the connector.
  signature: 'on_teams_card_action_invoke(turn_context: botbuilder.core.turn_context.TurnContext)
    -> botbuilder.core.invoke_response.InvokeResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: An InvokeResponse that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_channel_created
  name: on_teams_channel_created
  summary: 'Invoked when a Channel Created event activity is received from the connector.

    Channel Created correspond to the user creating a new channel.'
  signature: 'on_teams_channel_created(channel_info: botbuilder.schema.teams._models_py3.ChannelInfo,
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: channel_info
    description: The channel info object which describes the channel.
    isRequired: true
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_channel_deleted
  name: on_teams_channel_deleted
  summary: 'Invoked when a Channel Deleted event activity is received from the connector.

    Channel Deleted correspond to the user deleting an existing channel.'
  signature: 'on_teams_channel_deleted(channel_info: botbuilder.schema.teams._models_py3.ChannelInfo,
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: channel_info
    description: The channel info object which describes the channel.
    isRequired: true
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_channel_renamed
  name: on_teams_channel_renamed
  summary: 'Invoked when a Channel Renamed event activity is received from the connector.

    Channel Renamed correspond to the user renaming an existing channel.'
  signature: 'on_teams_channel_renamed(channel_info: botbuilder.schema.teams._models_py3.ChannelInfo,
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: channel_info
    description: The channel info object which describes the channel.
    isRequired: true
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_channel_restored
  name: on_teams_channel_restored
  summary: 'Invoked when a Channel Restored event activity is received from the connector.

    Channel Restored correspond to the user restoring a previously deleted channel.'
  signature: 'on_teams_channel_restored(channel_info: botbuilder.schema.teams._models_py3.ChannelInfo,
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: channel_info
    description: The channel info object which describes the channel.
    isRequired: true
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_file_consent
  name: on_teams_file_consent
  summary: 'Invoked when a file consent card activity is received from the connector.


    activity sent when the user acts on a file consent card.'
  signature: 'on_teams_file_consent(turn_context: botbuilder.core.turn_context.TurnContext,
    file_consent_card_response: botbuilder.schema.teams._models_py3.FileConsentCardResponse)
    -> botbuilder.core.invoke_response.InvokeResponse'
  parameters:
  - name: turn_context
    isRequired: true
  - name: file_consent_card_response
    isRequired: true
  return:
    description: An InvokeResponse depending on the action of the file consent card.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_file_consent_accept
  name: on_teams_file_consent_accept
  summary: 'Invoked when a file consent card is accepted by the user.


    activity sent when the user accepts a file consent card.'
  signature: 'on_teams_file_consent_accept(turn_context: botbuilder.core.turn_context.TurnContext,
    file_consent_card_response: botbuilder.schema.teams._models_py3.FileConsentCardResponse)'
  parameters:
  - name: turn_context
    isRequired: true
  - name: file_consent_card_response
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_file_consent_decline
  name: on_teams_file_consent_decline
  summary: 'Invoked when a file consent card is declined by the user.


    activity sent when the user declines a file consent card.'
  signature: 'on_teams_file_consent_decline(turn_context: botbuilder.core.turn_context.TurnContext,
    file_consent_card_response: botbuilder.schema.teams._models_py3.FileConsentCardResponse)'
  parameters:
  - name: turn_context
    isRequired: true
  - name: file_consent_card_response
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_members_added
  name: on_teams_members_added
  summary: 'Override this in a derived class to provide logic for when members other
    than the bot

    join the channel, such as your bot''s welcome logic.


    described by the conversation update activity.

    :param team_info: The team info object representing the team.

    :param turn_context: A context object for this turn.'
  signature: 'on_teams_members_added(teams_members_added: [<class ''botbuilder.schema.teams._models_py3.TeamsChannelAccount''>],
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: teams_members_added
    isRequired: true
  - name: team_info
    isRequired: true
  - name: turn_context
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_members_added_dispatch
  name: on_teams_members_added_dispatch
  summary: 'Override this in a derived class to provide logic for when members other
    than the bot

    join the channel, such as your bot''s welcome logic.

    It will get the associated members with the provided accounts.


    described by the conversation update activity.

    :param team_info: The team info object representing the team.

    :param turn_context: A context object for this turn.'
  signature: 'on_teams_members_added_dispatch(members_added: [<class ''botbuilder.schema._models_py3.ChannelAccount''>],
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: members_added
    isRequired: true
  - name: team_info
    isRequired: true
  - name: turn_context
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_members_removed
  name: on_teams_members_removed
  summary: 'Override this in a derived class to provide logic for when members other
    than the bot

    leave the channel, such as your bot''s good-bye logic.


    described by the conversation update activity.

    :param team_info: The team info object representing the team.

    :param turn_context: A context object for this turn.'
  signature: 'on_teams_members_removed(teams_members_removed: [<class ''botbuilder.schema.teams._models_py3.TeamsChannelAccount''>],
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: teams_members_removed
    isRequired: true
  - name: team_info
    isRequired: true
  - name: turn_context
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_members_removed_dispatch
  name: on_teams_members_removed_dispatch
  summary: 'Override this in a derived class to provide logic for when members other
    than the bot

    leave the channel, such as your bot''s good-bye logic.

    It will get the associated members with the provided accounts.


    described by the conversation update activity.

    :param team_info: The team info object representing the team.

    :param turn_context: A context object for this turn.'
  signature: 'on_teams_members_removed_dispatch(members_removed: [<class ''botbuilder.schema._models_py3.ChannelAccount''>],
    team_info: botbuilder.schema.teams._models_py3.TeamInfo, turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: members_removed
    isRequired: true
  - name: team_info
    isRequired: true
  - name: turn_context
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_bot_message_preview_edit
  name: on_teams_messaging_extension_bot_message_preview_edit
  summary: Invoked when a messaging extension bot message preview edit activity is
    received from the connector.
  signature: 'on_teams_messaging_extension_bot_message_preview_edit(turn_context:
    botbuilder.core.turn_context.TurnContext, action: botbuilder.schema.teams._models_py3.MessagingExtensionAction)
    -> botbuilder.schema.teams._models_py3.MessagingExtensionActionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: action
    description: The messaging extension action.
    isRequired: true
  return:
    description: The Messaging Extension Action Response for the action.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_bot_message_preview_send
  name: on_teams_messaging_extension_bot_message_preview_send
  summary: Invoked when a messaging extension bot message preview send activity is
    received from the connector.
  signature: 'on_teams_messaging_extension_bot_message_preview_send(turn_context:
    botbuilder.core.turn_context.TurnContext, action: botbuilder.schema.teams._models_py3.MessagingExtensionAction)
    -> botbuilder.schema.teams._models_py3.MessagingExtensionActionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: action
    description: The messaging extension action.
    isRequired: true
  return:
    description: The Messaging Extension Action Response for the action.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_card_button_clicked
  name: on_teams_messaging_extension_card_button_clicked
  summary: Override this in a derived class to provide logic for when a card button
    is clicked in a messaging extension.
  signature: 'on_teams_messaging_extension_card_button_clicked(turn_context: botbuilder.core.turn_context.TurnContext,
    card_data)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: card_data
    description: Object representing the card data.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_configuration_query_settings_url
  name: on_teams_messaging_extension_configuration_query_settings_url
  summary: Invoked when a messaging extension configuration query setting url activity
    is received from the connector.
  signature: 'on_teams_messaging_extension_configuration_query_settings_url(turn_context:
    botbuilder.core.turn_context.TurnContext, query: botbuilder.schema.teams._models_py3.MessagingExtensionQuery)
    -> botbuilder.schema.teams._models_py3.MessagingExtensionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: query
    description: The Messaging extension query.
    isRequired: true
  return:
    description: The Messaging Extension Response for the query.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_configuration_setting
  name: on_teams_messaging_extension_configuration_setting
  summary: Override this in a derived class to provide logic for when a configuration
    is set for a messaging extension.
  signature: 'on_teams_messaging_extension_configuration_setting(turn_context: botbuilder.core.turn_context.TurnContext,
    settings)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: settings
    description: Object representing the configuration settings.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_fetch_task
  name: on_teams_messaging_extension_fetch_task
  summary: Invoked when a Messaging Extension Fetch activity is received from the
    connector.
  signature: 'on_teams_messaging_extension_fetch_task(turn_context: botbuilder.core.turn_context.TurnContext,
    action: botbuilder.schema.teams._models_py3.MessagingExtensionAction) -> botbuilder.schema.teams._models_py3.MessagingExtensionActionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: action
    description: The messaging extension action.
    isRequired: true
  return:
    description: The Messaging Extension Action Response for the action.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_query
  name: on_teams_messaging_extension_query
  summary: Invoked when a Messaging Extension Query activity is received from the
    connector.
  signature: 'on_teams_messaging_extension_query(turn_context: botbuilder.core.turn_context.TurnContext,
    query: botbuilder.schema.teams._models_py3.MessagingExtensionQuery) -> botbuilder.schema.teams._models_py3.MessagingExtensionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: query
    description: The query for the search command.
    isRequired: true
  return:
    description: The Messaging Extension Response for the query.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_select_item
  name: on_teams_messaging_extension_select_item
  summary: Invoked when a messaging extension select item activity is received from
    the connector.
  signature: 'on_teams_messaging_extension_select_item(turn_context: botbuilder.core.turn_context.TurnContext,
    query) -> botbuilder.schema.teams._models_py3.MessagingExtensionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: query
    description: The object representing the query.
    isRequired: true
  return:
    description: The Messaging Extension Response for the query.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_submit_action
  name: on_teams_messaging_extension_submit_action
  summary: Invoked when a messaging extension submit action activity is received from
    the connector.
  signature: 'on_teams_messaging_extension_submit_action(turn_context: botbuilder.core.turn_context.TurnContext,
    action: botbuilder.schema.teams._models_py3.MessagingExtensionAction) -> botbuilder.schema.teams._models_py3.MessagingExtensionActionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: action
    description: The messaging extension action.
    isRequired: true
  return:
    description: The Messaging Extension Action Response for the action.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_messaging_extension_submit_action_dispatch
  name: on_teams_messaging_extension_submit_action_dispatch
  summary: Invoked when a messaging extension submit action dispatch activity is received
    from the connector.
  signature: 'on_teams_messaging_extension_submit_action_dispatch(turn_context: botbuilder.core.turn_context.TurnContext,
    action: botbuilder.schema.teams._models_py3.MessagingExtensionAction) -> botbuilder.schema.teams._models_py3.MessagingExtensionActionResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: action
    description: The messaging extension action.
    isRequired: true
  return:
    description: The Messaging Extension Action Response for the action.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_o365_connector_card_action
  name: on_teams_o365_connector_card_action
  summary: Invoked when a O365 Connector Card Action activity is received from the
    connector.
  signature: 'on_teams_o365_connector_card_action(turn_context: botbuilder.core.turn_context.TurnContext,
    query: botbuilder.schema.teams._models_py3.O365ConnectorCardActionQuery)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: query
    description: The O365 connector card HttpPOST invoke query.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_signin_token_exchange
  name: on_teams_signin_token_exchange
  signature: 'on_teams_signin_token_exchange(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_signin_verify_state
  name: on_teams_signin_verify_state
  summary: Invoked when a signIn verify state activity is received from the connector.
  signature: 'on_teams_signin_verify_state(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_tab_fetch
  name: on_teams_tab_fetch
  summary: Override this in a derived class to provide logic for when a tab is fetched.
  signature: 'on_teams_tab_fetch(turn_context: botbuilder.core.turn_context.TurnContext,
    tab_request: botbuilder.schema.teams._models_py3.TabRequest)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: tab_request
    description: The tab invoke request value payload.
    isRequired: true
  return:
    description: A Tab Response for the request.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_tab_submit
  name: on_teams_tab_submit
  summary: Override this in a derived class to provide logic for when a tab is submitted.
  signature: 'on_teams_tab_submit(turn_context: botbuilder.core.turn_context.TurnContext,
    tab_submit: botbuilder.schema.teams._models_py3.TabSubmit)'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: tab_submit
    description: The tab submit invoke request value payload.
    isRequired: true
  return:
    description: A Tab Response for the request.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_task_module_fetch
  name: on_teams_task_module_fetch
  summary: Override this in a derived class to provide logic for when a task module
    is fetched.
  signature: 'on_teams_task_module_fetch(turn_context: botbuilder.core.turn_context.TurnContext,
    task_module_request: botbuilder.schema.teams._models_py3.TaskModuleRequest) ->
    botbuilder.schema.teams._models_py3.TaskModuleResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: task_module_request
    description: The task module invoke request value payload.
    isRequired: true
  return:
    description: A Task Module Response for the request.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_task_module_submit
  name: on_teams_task_module_submit
  summary: Override this in a derived class to provide logic for when a task module
    is submitted.
  signature: 'on_teams_task_module_submit(turn_context: botbuilder.core.turn_context.TurnContext,
    task_module_request: botbuilder.schema.teams._models_py3.TaskModuleRequest) ->
    botbuilder.schema.teams._models_py3.TaskModuleResponse'
  parameters:
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  - name: task_module_request
    description: The task module invoke request value payload.
    isRequired: true
  return:
    description: A Task Module Response for the request.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_archived
  name: on_teams_team_archived
  summary: 'Invoked when a Team Archived event activity is received from the connector.

    Team Archived correspond to the user archiving a team.'
  signature: 'on_teams_team_archived(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_deleted
  name: on_teams_team_deleted
  summary: 'Invoked when a Team Deleted event activity is received from the connector.

    Team Deleted corresponds to the user deleting a team.'
  signature: 'on_teams_team_deleted(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_hard_deleted
  name: on_teams_team_hard_deleted
  summary: 'Invoked when a Team Hard Deleted event activity is received from the connector.

    Team Hard Deleted corresponds to the user hard deleting a team.'
  signature: 'on_teams_team_hard_deleted(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_renamed
  name: on_teams_team_renamed
  summary: 'Invoked when a Team Renamed event activity is received from the connector.

    Team Renamed correspond to the user renaming an existing team.'
  signature: 'on_teams_team_renamed(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_renamed_activity
  name: on_teams_team_renamed_activity
  summary: 'DEPRECATED. Please use on_teams_team_renamed(). This method will remain
    in place throughout

    v4 so as not to break existing bots.


    Invoked when a Team Renamed event activity is received from the connector.

    Team Renamed correspond to the user renaming an existing team.'
  signature: 'on_teams_team_renamed_activity(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_restored
  name: on_teams_team_restored
  summary: 'Invoked when a Team Restored event activity is received from the connector.

    Team Restored corresponds to the user restoring a team.'
  signature: 'on_teams_team_restored(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
- uid: botbuilder.core.teams.TeamsActivityHandler.on_teams_team_unarchived
  name: on_teams_team_unarchived
  summary: 'Invoked when a Team Unarchived event activity is received from the connector.

    Team Unarchived correspond to the user unarchiving a team.'
  signature: 'on_teams_team_unarchived(team_info: botbuilder.schema.teams._models_py3.TeamInfo,
    turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: team_info
    description: The team info object representing the team.
    isRequired: true
  - name: turn_context
    description: A context object for this turn.
    isRequired: true
  return:
    description: A task that represents the work queued to execute.
