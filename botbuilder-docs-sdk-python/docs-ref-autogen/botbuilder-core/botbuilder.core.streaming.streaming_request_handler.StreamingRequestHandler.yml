### YamlMime:PythonClass
uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler
name: StreamingRequestHandler
fullName: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler
module: botbuilder.core.streaming.streaming_request_handler
inheritances:
- botframework.streaming.request_handler.RequestHandler
constructor:
  syntax: 'StreamingRequestHandler(bot: botbuilder.core.bot.Bot, activity_processor:
    botbuilder.core.streaming.streaming_activity_processor.StreamingActivityProcessor,
    web_socket: botframework.streaming.transport.web_socket.web_socket.WebSocket,
    logger: Optional[logging.Logger] = None)'
methods:
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.conversation_added_time
  name: conversation_added_time
  signature: 'conversation_added_time(conversation_id: str) -> datetime.datetime'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.forget_conversation
  name: forget_conversation
  signature: 'forget_conversation(conversation_id: str)'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.has_conversation
  name: has_conversation
  signature: 'has_conversation(conversation_id: str) -> bool'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.listen
  name: listen
  signature: async listen()
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.process_request
  name: process_request
  signature: 'async process_request(request: botframework.streaming.receive_request.ReceiveRequest,
    logger: logging.Logger, context: object) -> botframework.streaming.streaming_response.StreamingResponse'
  parameters:
  - name: request
    isRequired: true
  - name: logger
    isRequired: true
  - name: context
    isRequired: true
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.send_activity
  name: send_activity
  signature: 'async send_activity(activity: botbuilder.schema._models_py3.Activity)
    -> botbuilder.schema._models_py3.ResourceResponse'
  parameters:
  - name: activity
    isRequired: true
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.send_streaming_request
  name: send_streaming_request
  signature: 'async send_streaming_request(request: botframework.streaming.streaming_request.StreamingRequest)
    -> botframework.streaming.receive_response.ReceiveResponse'
  parameters:
  - name: request
    isRequired: true
attributes:
- uid: botbuilder.core.streaming.streaming_request_handler.StreamingRequestHandler.service_url
  name: service_url
