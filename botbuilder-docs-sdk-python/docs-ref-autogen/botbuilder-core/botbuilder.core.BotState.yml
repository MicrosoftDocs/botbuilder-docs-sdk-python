### YamlMime:PythonClass
uid: botbuilder.core.BotState
name: BotState
fullName: botbuilder.core.BotState
module: botbuilder.core
inheritances:
- botbuilder.core.property_manager.PropertyManager
summary: 'Defines a state management object and automates the reading and writing
  of

  associated state properties to a storage layer.'
constructor:
  syntax: 'BotState(storage: botbuilder.core.storage.Storage, context_service_key:
    str)'
remarks: 'Each state management object defines a scope for a storage layer.

  State properties are created within a state management scope, and the Bot Framework

  defines these scopes: <xref:botbuilder.core.ConversationState>, <xref:botbuilder.core.UserState>,
  and <xref:botbuilder.core.PrivateConversationState>.

  You can define additional scopes for your bot.

  '
methods:
- uid: botbuilder.core.BotState.clear_state
  name: clear_state
  summary: Clears any state currently stored in this state scope.
  signature: 'clear_state(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  return:
    description: None
  remarks: 'This function must be called in order for the cleared state to be persisted
    to the underlying store.

    '
- uid: botbuilder.core.BotState.create_property
  name: create_property
  summary: Creates a property definition and registers it with this <xref:botbuilder.core.BotState>.
  signature: 'create_property(name: str) -> botbuilder.core.state_property_accessor.StatePropertyAccessor'
  parameters:
  - name: name
    description: The name of the property
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: If successful, the state property accessor created
    types:
    - <xref:botbuilder.core.StatePropertyAccessor>
- uid: botbuilder.core.BotState.delete
  name: delete
  summary: Deletes any state currently stored in this state scope.
  signature: 'delete(turn_context: botbuilder.core.turn_context.TurnContext) -> None'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  return:
    description: None
- uid: botbuilder.core.BotState.delete_property_value
  name: delete_property_value
  summary: Deletes a property from the state cache in the turn context.
  signature: 'delete_property_value(turn_context: botbuilder.core.turn_context.TurnContext,
    property_name: str) -> None'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.:TurnContext`>
  - name: property_name
    description: The name of the property to delete
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: None
- uid: botbuilder.core.BotState.get
  name: get
  signature: 'get(turn_context: botbuilder.core.turn_context.TurnContext) -> Dict[str,
    object]'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.BotState.get_cached_state
  name: get_cached_state
  summary: 'Gets the cached bot state instance that wraps the raw cached data for
    this "BotState"

    from the turn context.'
  signature: 'get_cached_state(turn_context: botbuilder.core.turn_context.TurnContext)'
  parameters:
  - name: turn_context
    description: The context object for this turn.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  return:
    description: The cached bot state instance.
- uid: botbuilder.core.BotState.get_property_value
  name: get_property_value
  summary: Gets the value of the specified property in the turn context.
  signature: 'get_property_value(turn_context: botbuilder.core.turn_context.TurnContext,
    property_name: str)'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: property_name
    description: The property name
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: The value of the property
- uid: botbuilder.core.BotState.get_storage_key
  name: get_storage_key
  signature: 'get_storage_key(turn_context: botbuilder.core.turn_context.TurnContext)
    -> str'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.BotState.load
  name: load
  summary: Reads the current state object and caches it in the context object for
    this turn.
  signature: 'load(turn_context: botbuilder.core.turn_context.TurnContext, force:
    bool = False) -> None'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: force
    description: Optional, true to bypass the cache
    defaultValue: 'False'
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
- uid: botbuilder.core.BotState.save_changes
  name: save_changes
  summary: 'Saves the state cached in the current context for this turn.

    If the state has changed, it saves the state cached in the current context for
    this turn.'
  signature: 'save_changes(turn_context: botbuilder.core.turn_context.TurnContext,
    force: bool = False) -> None'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: force
    description: Optional, true to save state to storage whether or not there are
      changes
    defaultValue: 'False'
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
- uid: botbuilder.core.BotState.set_property_value
  name: set_property_value
  summary: Sets a property to the specified value in the turn context.
  signature: 'set_property_value(turn_context: botbuilder.core.turn_context.TurnContext,
    property_name: str, value: object) -> None'
  parameters:
  - name: turn_context
    description: The context object for this turn
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: property_name
    description: The property name
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: value
    description: The value to assign to the property
    isRequired: true
    types:
    - <xref:botbuilder.core.Object>
  return:
    description: None
