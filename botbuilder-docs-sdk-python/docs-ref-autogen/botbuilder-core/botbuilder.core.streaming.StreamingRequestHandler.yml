### YamlMime:PythonClass
uid: botbuilder.core.streaming.StreamingRequestHandler
name: StreamingRequestHandler
fullName: botbuilder.core.streaming.StreamingRequestHandler
module: botbuilder.core.streaming
inheritances:
- botframework.streaming.request_handler.RequestHandler
constructor:
  syntax: 'StreamingRequestHandler(bot: Bot, activity_processor: StreamingActivityProcessor,
    web_socket: WebSocket, logger: Logger = None)'
  parameters:
  - name: bot
  - name: activity_processor
  - name: web_socket
  - name: logger
    defaultValue: None
methods:
- uid: botbuilder.core.streaming.StreamingRequestHandler.conversation_added_time
  name: conversation_added_time
  signature: 'conversation_added_time(conversation_id: str) -> datetime'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.StreamingRequestHandler.forget_conversation
  name: forget_conversation
  signature: 'forget_conversation(conversation_id: str)'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.StreamingRequestHandler.has_conversation
  name: has_conversation
  signature: 'has_conversation(conversation_id: str) -> bool'
  parameters:
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.streaming.StreamingRequestHandler.listen
  name: listen
  signature: async listen()
- uid: botbuilder.core.streaming.StreamingRequestHandler.process_request
  name: process_request
  signature: 'async process_request(request: ReceiveRequest, logger: Logger, context:
    object) -> StreamingResponse'
  parameters:
  - name: request
    isRequired: true
  - name: logger
    isRequired: true
  - name: context
    isRequired: true
- uid: botbuilder.core.streaming.StreamingRequestHandler.send_activity
  name: send_activity
  signature: 'async send_activity(activity: Activity) -> ResourceResponse'
  parameters:
  - name: activity
    isRequired: true
- uid: botbuilder.core.streaming.StreamingRequestHandler.send_streaming_request
  name: send_streaming_request
  signature: 'async send_streaming_request(request: StreamingRequest) -> ReceiveResponse'
  parameters:
  - name: request
    isRequired: true
attributes:
- uid: botbuilder.core.streaming.StreamingRequestHandler.service_url
  name: service_url
