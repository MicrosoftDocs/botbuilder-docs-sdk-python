### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.core.state_property_accessor.StatePropertyAccessor.delete
  - botbuilder.core.state_property_accessor.StatePropertyAccessor.get
  - botbuilder.core.state_property_accessor.StatePropertyAccessor.set
  class: botbuilder.core.state_property_accessor.StatePropertyAccessor
  fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor
  inheritance:
  - inheritance:
    - type: builtins.object
    type: abc.ABC
  langs:
  - python
  module: botbuilder.core.state_property_accessor
  name: StatePropertyAccessor
  summary: ''
  syntax: {}
  type: class
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor
- class: botbuilder.core.state_property_accessor.StatePropertyAccessor
  fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.delete
  langs:
  - python
  module: botbuilder.core.state_property_accessor
  name: 'delete(turn_context: botbuilder.core.turn_context.TurnContext) -> None'
  summary: 'Saves store items to storage.

    :param turn_context: Turn Context.

    :return:'
  syntax:
    content: 'delete(turn_context: botbuilder.core.turn_context.TurnContext) -> None'
  type: method
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.delete
- class: botbuilder.core.state_property_accessor.StatePropertyAccessor
  fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.get
  langs:
  - python
  module: botbuilder.core.state_property_accessor
  name: 'get(turn_context: botbuilder.core.turn_context.TurnContext, default_value_or_factory=None)
    -> object'
  summary: 'Get the property value from the source

    :param turn_context: Turn Context.

    :param default_value_or_factory: Function which defines the property

    value to be returned if no value has been set.'
  syntax:
    content: 'get(turn_context: botbuilder.core.turn_context.TurnContext, default_value_or_factory=None)
      -> object'
  type: method
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.get
- class: botbuilder.core.state_property_accessor.StatePropertyAccessor
  fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.set
  langs:
  - python
  module: botbuilder.core.state_property_accessor
  name: 'set(turn_context: botbuilder.core.turn_context.TurnContext, value) -> None'
  summary: 'Set the property value on the source.

    :param turn_context: Turn Context.

    :param value:

    :return:'
  syntax:
    content: 'set(turn_context: botbuilder.core.turn_context.TurnContext, value) ->
      None'
  type: method
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.set
references:
- fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.delete
  isExternal: false
  name: 'delete(turn_context: botbuilder.core.turn_context.TurnContext) -> None'
  parent: botbuilder.core.state_property_accessor.StatePropertyAccessor
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.delete
- fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.get
  isExternal: false
  name: 'get(turn_context: botbuilder.core.turn_context.TurnContext, default_value_or_factory=None)
    -> object'
  parent: botbuilder.core.state_property_accessor.StatePropertyAccessor
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.get
- fullName: botbuilder.core.state_property_accessor.StatePropertyAccessor.set
  isExternal: false
  name: 'set(turn_context: botbuilder.core.turn_context.TurnContext, value) -> None'
  parent: botbuilder.core.state_property_accessor.StatePropertyAccessor
  uid: botbuilder.core.state_property_accessor.StatePropertyAccessor.set
