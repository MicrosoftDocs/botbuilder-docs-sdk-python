### YamlMime:PythonClass
uid: botbuilder.core.streaming.BotFrameworkHttpAdapterBase
name: BotFrameworkHttpAdapterBase
fullName: botbuilder.core.streaming.BotFrameworkHttpAdapterBase
module: botbuilder.core.streaming
inheritances:
- botbuilder.core.bot_framework_adapter.BotFrameworkAdapter
- botbuilder.core.streaming.streaming_activity_processor.StreamingActivityProcessor
constructor:
  syntax: 'BotFrameworkHttpAdapterBase(settings: BotFrameworkAdapterSettings)'
  parameters:
  - name: settings
methods:
- uid: botbuilder.core.streaming.BotFrameworkHttpAdapterBase.can_process_outgoing_activity
  name: can_process_outgoing_activity
  signature: 'can_process_outgoing_activity(activity: Activity) -> bool'
  parameters:
  - name: activity
    isRequired: true
- uid: botbuilder.core.streaming.BotFrameworkHttpAdapterBase.process_outgoing_activity
  name: process_outgoing_activity
  signature: 'async process_outgoing_activity(turn_context: TurnContext, activity:
    Activity) -> ResourceResponse'
  parameters:
  - name: turn_context
    isRequired: true
  - name: activity
    isRequired: true
- uid: botbuilder.core.streaming.BotFrameworkHttpAdapterBase.process_streaming_activity
  name: process_streaming_activity
  signature: 'async process_streaming_activity(activity: Activity, bot_callback_handler:
    Callable[[TurnContext], Awaitable]) -> InvokeResponse'
  parameters:
  - name: activity
    isRequired: true
  - name: bot_callback_handler
    isRequired: true
- uid: botbuilder.core.streaming.BotFrameworkHttpAdapterBase.send_streaming_activity
  name: send_streaming_activity
  signature: 'async send_streaming_activity(activity: Activity) -> ResourceResponse'
  parameters:
  - name: activity
    isRequired: true
