### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.core.teams.teams_info.TeamsInfo.get_member
  - botbuilder.core.teams.teams_info.TeamsInfo.get_members
  - botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
  - botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
  - botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
  - botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
  - botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
  - botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
  - botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
  - botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
  - botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
  class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: TeamsInfo
  summary: ''
  syntax: {}
  type: class
  uid: botbuilder.core.teams.teams_info.TeamsInfo
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_member
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_member(turn_context: botbuilder.core.turn_context.TurnContext, member_id:
    str) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  syntax:
    content: 'get_member(turn_context: botbuilder.core.turn_context.TurnContext, member_id:
      str) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_member
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_members
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_members(turn_context: botbuilder.core.turn_context.TurnContext) -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  syntax:
    content: 'get_members(turn_context: botbuilder.core.turn_context.TurnContext)
      -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_members
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_paged_members(turn_context: botbuilder.core.turn_context.TurnContext,
    continuation_token: str = None, page_size: int = None) -> typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  syntax:
    content: 'get_paged_members(turn_context: botbuilder.core.turn_context.TurnContext,
      continuation_token: str = None, page_size: int = None) -> typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_paged_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''', continuation_token: str = None, page_size: int = None) ->
    typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  syntax:
    content: 'get_paged_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
      team_id: str = '''', continuation_token: str = None, page_size: int = None)
      -> typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_team_channels(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.ChannelInfo]'
  syntax:
    content: 'get_team_channels(turn_context: botbuilder.core.turn_context.TurnContext,
      team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.ChannelInfo]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_team_details(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> botbuilder.schema.teams._models_py3.TeamDetails'
  syntax:
    content: 'get_team_details(turn_context: botbuilder.core.turn_context.TurnContext,
      team_id: str = '''') -> botbuilder.schema.teams._models_py3.TeamDetails'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_team_id(turn_context: botbuilder.core.turn_context.TurnContext)'
  syntax:
    content: 'get_team_id(turn_context: botbuilder.core.turn_context.TurnContext)'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_team_member(turn_context: botbuilder.core.turn_context.TurnContext, team_id:
    str = '''', member_id: str = None) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  syntax:
    content: 'get_team_member(turn_context: botbuilder.core.turn_context.TurnContext,
      team_id: str = '''', member_id: str = None) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  syntax:
    content: 'get_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
      team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'get_teams_connector_client(turn_context: botbuilder.core.turn_context.TurnContext)
    -> botframework.connector.teams.teams_connector_client.TeamsConnectorClient'
  syntax:
    content: 'get_teams_connector_client(turn_context: botbuilder.core.turn_context.TurnContext)
      -> botframework.connector.teams.teams_connector_client.TeamsConnectorClient'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
- class: botbuilder.core.teams.teams_info.TeamsInfo
  fullName: botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
  langs:
  - python
  module: botbuilder.core.teams.teams_info
  name: 'send_message_to_teams_channel(turn_context: botbuilder.core.turn_context.TurnContext,
    activity: botbuilder.schema._models_py3.Activity, teams_channel_id: str) -> typing.Tuple[botbuilder.schema._models_py3.ConversationReference,
    str]'
  syntax:
    content: 'send_message_to_teams_channel(turn_context: botbuilder.core.turn_context.TurnContext,
      activity: botbuilder.schema._models_py3.Activity, teams_channel_id: str) ->
      typing.Tuple[botbuilder.schema._models_py3.ConversationReference, str]'
  type: method
  uid: botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
references:
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_member
  isExternal: false
  name: 'get_member(turn_context: botbuilder.core.turn_context.TurnContext, member_id:
    str) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_member
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_members
  isExternal: false
  name: 'get_members(turn_context: botbuilder.core.turn_context.TurnContext) -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_members
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
  isExternal: false
  name: 'get_paged_members(turn_context: botbuilder.core.turn_context.TurnContext,
    continuation_token: str = None, page_size: int = None) -> typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
  isExternal: false
  name: 'get_paged_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''', continuation_token: str = None, page_size: int = None) ->
    typing.List[botbuilder.schema.teams._models_py3.TeamsPagedMembersResult]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
  isExternal: false
  name: 'get_team_channels(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.ChannelInfo]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
  isExternal: false
  name: 'get_team_details(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> botbuilder.schema.teams._models_py3.TeamDetails'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
  isExternal: false
  name: 'get_team_id(turn_context: botbuilder.core.turn_context.TurnContext)'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
  isExternal: false
  name: 'get_team_member(turn_context: botbuilder.core.turn_context.TurnContext, team_id:
    str = '''', member_id: str = None) -> botbuilder.schema.teams._models_py3.TeamsChannelAccount'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
  isExternal: false
  name: 'get_team_members(turn_context: botbuilder.core.turn_context.TurnContext,
    team_id: str = '''') -> typing.List[botbuilder.schema.teams._models_py3.TeamsChannelAccount]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
  isExternal: false
  name: 'get_teams_connector_client(turn_context: botbuilder.core.turn_context.TurnContext)
    -> botframework.connector.teams.teams_connector_client.TeamsConnectorClient'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
- fullName: botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
  isExternal: false
  name: 'send_message_to_teams_channel(turn_context: botbuilder.core.turn_context.TurnContext,
    activity: botbuilder.schema._models_py3.Activity, teams_channel_id: str) -> typing.Tuple[botbuilder.schema._models_py3.ConversationReference,
    str]'
  parent: botbuilder.core.teams.teams_info.TeamsInfo
  uid: botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
