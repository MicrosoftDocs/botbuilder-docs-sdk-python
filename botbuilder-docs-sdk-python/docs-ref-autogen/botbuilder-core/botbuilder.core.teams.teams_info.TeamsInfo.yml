### YamlMime:PythonClass
uid: botbuilder.core.teams.teams_info.TeamsInfo
name: TeamsInfo
fullName: botbuilder.core.teams.teams_info.TeamsInfo
module: botbuilder.core.teams.teams_info
inheritances:
- builtins.object
constructor:
  syntax: TeamsInfo()
methods:
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_meeting_info
  name: get_meeting_info
  signature: 'async static get_meeting_info(turn_context: TurnContext, meeting_id:
    str | None = None) -> MeetingInfo'
  parameters:
  - name: turn_context
    isRequired: true
  - name: meeting_id
    defaultValue: None
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_meeting_participant
  name: get_meeting_participant
  signature: 'async static get_meeting_participant(turn_context: TurnContext, meeting_id:
    str | None = None, participant_id: str | None = None, tenant_id: str | None =
    None) -> TeamsMeetingParticipant'
  parameters:
  - name: turn_context
    isRequired: true
  - name: meeting_id
    defaultValue: None
  - name: participant_id
    defaultValue: None
  - name: tenant_id
    defaultValue: None
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_member
  name: get_member
  signature: 'async static get_member(turn_context: TurnContext, member_id: str) ->
    TeamsChannelAccount'
  parameters:
  - name: turn_context
    isRequired: true
  - name: member_id
    isRequired: true
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_members
  name: get_members
  signature: 'async static get_members(turn_context: TurnContext) -> List[TeamsChannelAccount]'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_members
  name: get_paged_members
  signature: 'async static get_paged_members(turn_context: TurnContext, continuation_token:
    str | None = None, page_size: int | None = None) -> List[TeamsPagedMembersResult]'
  parameters:
  - name: turn_context
    isRequired: true
  - name: continuation_token
    defaultValue: None
  - name: page_size
    defaultValue: None
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_paged_team_members
  name: get_paged_team_members
  signature: 'async static get_paged_team_members(turn_context: TurnContext, team_id:
    str = '''', continuation_token: str | None = None, page_size: int | None = None)
    -> List[TeamsPagedMembersResult]'
  parameters:
  - name: turn_context
    isRequired: true
  - name: team_id
  - name: continuation_token
    defaultValue: None
  - name: page_size
    defaultValue: None
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_channels
  name: get_team_channels
  signature: 'async static get_team_channels(turn_context: TurnContext, team_id: str
    = '''') -> List[ChannelInfo]'
  parameters:
  - name: turn_context
    isRequired: true
  - name: team_id
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_details
  name: get_team_details
  signature: 'async static get_team_details(turn_context: TurnContext, team_id: str
    = '''') -> TeamDetails'
  parameters:
  - name: turn_context
    isRequired: true
  - name: team_id
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_id
  name: get_team_id
  signature: 'static get_team_id(turn_context: TurnContext)'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_member
  name: get_team_member
  signature: 'async static get_team_member(turn_context: TurnContext, team_id: str
    = '''', member_id: str | None = None) -> TeamsChannelAccount'
  parameters:
  - name: turn_context
    isRequired: true
  - name: team_id
  - name: member_id
    defaultValue: None
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_team_members
  name: get_team_members
  signature: 'async static get_team_members(turn_context: TurnContext, team_id: str
    = '''') -> List[TeamsChannelAccount]'
  parameters:
  - name: turn_context
    isRequired: true
  - name: team_id
- uid: botbuilder.core.teams.teams_info.TeamsInfo.get_teams_connector_client
  name: get_teams_connector_client
  signature: 'async static get_teams_connector_client(turn_context: TurnContext) ->
    TeamsConnectorClient'
  parameters:
  - name: turn_context
    isRequired: true
- uid: botbuilder.core.teams.teams_info.TeamsInfo.send_message_to_teams_channel
  name: send_message_to_teams_channel
  signature: 'async static send_message_to_teams_channel(turn_context: TurnContext,
    activity: Activity, teams_channel_id: str) -> Tuple[ConversationReference, str]'
  parameters:
  - name: turn_context
    isRequired: true
  - name: activity
    isRequired: true
  - name: teams_channel_id
    isRequired: true
