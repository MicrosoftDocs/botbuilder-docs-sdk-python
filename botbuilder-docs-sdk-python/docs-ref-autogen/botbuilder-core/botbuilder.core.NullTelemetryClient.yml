### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.core.NullTelemetryClient.track_dependency
  - botbuilder.core.NullTelemetryClient.track_event
  - botbuilder.core.NullTelemetryClient.track_exception
  - botbuilder.core.NullTelemetryClient.track_metric
  - botbuilder.core.NullTelemetryClient.track_pageview
  - botbuilder.core.NullTelemetryClient.track_request
  - botbuilder.core.NullTelemetryClient.track_trace
  class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: botbuilder.core.bot_telemetry_client.BotTelemetryClient
  langs:
  - python
  module: botbuilder.core
  name: NullTelemetryClient
  source:
    id: NullTelemetryClient
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 9
  summary: ''
  syntax:
    content: NullTelemetryClient()
  type: class
  uid: botbuilder.core.NullTelemetryClient
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_dependency
  langs:
  - python
  module: botbuilder.core
  name: 'track_dependency(name: str, data: str, type_name: str = None, target: str
    = None, duration: int = None, success: bool = None, result_code: str = None, properties:
    typing.Dict[str, object] = None, measurements: typing.Dict[str, object] = None,
    dependency_id: str = None)'
  namewithoutparameters: track_dependency
  source:
    id: track_dependency
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 132
  summary: 'Sends a single dependency telemetry that was captured for the application.

    :param name: the name of the command initiated with this dependency call. Low
    cardinality value.         Examples are stored procedure name and URL path template.

    :param data: the command initiated by this dependency call.         Examples are
    SQL statement and HTTP URL with all query parameters.

    :param type_name: the dependency type name.         Low cardinality value for
    logical grouping of dependencies and interpretation of other fields         like
    commandName and resultCode. Examples are SQL, Azure table, and HTTP. (default
    to: None)

    :param target: the target site of a dependency call. Examples are server name,
    host address. (default to: None)

    :param duration: the number of milliseconds that this dependency call lasted.
    (defaults to: None)

    :param success: true if the dependency call ended in success, false otherwise.
    (defaults to: None)

    :param result_code: the result code of a dependency call. Examples are SQL error
    code and HTTP status code.         (defaults to: None)

    :param properties: the set of custom properties the client wants attached to this
    data item. (defaults to: None)

    :param measurements: the set of custom measurements the client wants to attach
    to this data item.         (defaults to: None)

    :param dependency_id: the id for this dependency call. If None, a new uuid will
    be generated.         (defaults to: None)'
  syntax:
    content: 'track_dependency(name: str, data: str, type_name: str = None, target:
      str = None, duration: int = None, success: bool = None, result_code: str = None,
      properties: typing.Dict[str, object] = None, measurements: typing.Dict[str,
      object] = None, dependency_id: str = None)'
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_dependency
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_event
  langs:
  - python
  module: botbuilder.core
  name: 'track_event(name: str, properties: typing.Dict[str, object] = None, measurements:
    typing.Dict[str, object] = None) -> None'
  namewithoutparameters: track_event
  source:
    id: track_event
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 51
  summary: 'Send information about a single event that has occurred in the context
    of the application.

    :param name: the data to associate to this event.

    :param properties: the set of custom properties the client wants attached to this
    data item. (defaults to: None)

    :param measurements: the set of custom measurements the client wants to attach
    to this data item.         (defaults to: None)'
  syntax:
    content: 'track_event(name: str, properties: typing.Dict[str, object] = None,
      measurements: typing.Dict[str, object] = None) -> None'
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_event
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_exception
  langs:
  - python
  module: botbuilder.core
  name: track_exception
  namewithoutparameters: track_exception
  source:
    id: track_exception
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 32
  summary: 'Send information about a single exception that occurred in the application.

    :param exception_type: the type of the exception that was thrown.

    :param value: the exception that the client wants to send.

    :param trace: the traceback information as returned by <xref:sys.exc_info>.

    :param properties: the set of custom properties the client wants attached to this
    data item. (defaults to: None)

    :param measurements: the set of custom measurements the client wants to attach
    to this data item.         (defaults to: None)'
  syntax: {}
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_exception
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_metric
  langs:
  - python
  module: botbuilder.core
  name: 'track_metric(name: str, value: float, tel_type: botbuilder.core.bot_telemetry_client.TelemetryDataPointType
    = None, count: int = None, min_val: float = None, max_val: float = None, std_dev:
    float = None, properties: typing.Dict[str, object] = None) -> NotImplemented'
  namewithoutparameters: track_metric
  source:
    id: track_metric
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 66
  summary: "Send information about a single metric data point that was captured for\
    \ the application.\n:param name: The name of the metric that was captured.\n:param\
    \ value: The value of the metric that was captured.\n:param tel_type: The type\
    \ of the metric. (defaults to: TelemetryDataPointType.aggregation`)\n:param count:\
    \ the number of metrics that were aggregated into this data point. (defaults to:\
    \ None\n:param min_val: the minimum of all metrics collected that were aggregated\
    \ into this data point.\n\n\n   (defaults to: None)"
  syntax:
    content: 'track_metric(name: str, value: float, tel_type: botbuilder.core.bot_telemetry_client.TelemetryDataPointType
      = None, count: int = None, min_val: float = None, max_val: float = None, std_dev:
      float = None, properties: typing.Dict[str, object] = None) -> NotImplemented'
    parameters:
    - description: 'the maximum of all metrics collected that were aggregated into
        this data point.

        (defaults to: None)'
      id: max_val
      isRequired: true
    - description: 'the standard deviation of all metrics collected that were aggregated
        into this data point.         (defaults to: None)'
      id: std_dev
      isRequired: true
    - description: 'the set of custom properties the client wants attached to this
        data item. (defaults to: None)'
      id: properties
      isRequired: true
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_metric
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_pageview
  langs:
  - python
  module: botbuilder.core
  name: 'track_pageview(name: str, url, duration: int = 0, properties: typing.Dict[str,
    object] = None, measurements: typing.Dict[str, object] = None) -> None'
  namewithoutparameters: track_pageview
  source:
    id: track_pageview
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 13
  summary: 'Send information about the page viewed in the application (a web page
    for instance).

    :param name: the name of the page that was viewed.

    :param url: the URL of the page that was viewed.

    :param duration: the duration of the page view in milliseconds. (defaults to:
    0)

    :param properties: the set of custom properties the client wants attached to this
    data item. (defaults to: None)

    :param measurements: the set of custom measurements the client wants to attach
    to this data item.         (defaults to: None)'
  syntax:
    content: 'track_pageview(name: str, url, duration: int = 0, properties: typing.Dict[str,
      object] = None, measurements: typing.Dict[str, object] = None) -> None'
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_pageview
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_request
  langs:
  - python
  module: botbuilder.core
  name: 'track_request(name: str, url: str, success: bool, start_time: str = None,
    duration: int = None, response_code: str = None, http_method: str = None, properties:
    typing.Dict[str, object] = None, measurements: typing.Dict[str, object] = None,
    request_id: str = None)'
  namewithoutparameters: track_request
  source:
    id: track_request
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 102
  summary: 'Sends a single request that was captured for the application.

    :param name: The name for this request. All requests with the same name will be
    grouped together.

    :param url: The actual URL for this request (to show in individual request instances).

    :param success: True if the request ended in success, False otherwise.

    :param start_time: the start time of the request. The value should look the same
    as the one returned         by <xref:datetime.isoformat>. (defaults to: None)

    :param duration: the number of milliseconds that this request lasted. (defaults
    to: None)

    :param response_code: the response code that this request returned. (defaults
    to: None)

    :param http_method: the HTTP method that triggered this request. (defaults to:
    None)

    :param properties: the set of custom properties the client wants attached to this
    data item. (defaults to: None)

    :param measurements: the set of custom measurements the client wants to attach
    to this data item.         (defaults to: None)

    :param request_id: the id for this request. If None, a new uuid will be generated.
    (defaults to: None)'
  syntax:
    content: 'track_request(name: str, url: str, success: bool, start_time: str =
      None, duration: int = None, response_code: str = None, http_method: str = None,
      properties: typing.Dict[str, object] = None, measurements: typing.Dict[str,
      object] = None, request_id: str = None)'
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_request
- class: botbuilder.core.NullTelemetryClient
  fullName: botbuilder.core.NullTelemetryClient.track_trace
  langs:
  - python
  module: botbuilder.core
  name: 'track_trace(name, properties=None, severity: botbuilder.core.bot_telemetry_client.Severity
    = None)'
  namewithoutparameters: track_trace
  source:
    id: track_trace
    path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
    remote:
      branch: master
      path: ./libraries/botbuilder-core\botbuilder\core\null_telemetry_client.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 93
  summary: 'Sends a single trace statement.

    :param name: the trace statement.'
  syntax:
    content: 'track_trace(name, properties=None, severity: botbuilder.core.bot_telemetry_client.Severity
      = None)'
    parameters:
    - description: 'the set of custom properties the client wants attached to this
        data item. (defaults to: None)'
      id: properties
      isRequired: true
    - description: the severity level of this trace, one of DEBUG, INFO, WARNING,
        ERROR, CRITICAL
      id: severity
      isRequired: true
  type: method
  uid: botbuilder.core.NullTelemetryClient.track_trace
references:
- fullName: botbuilder.core.NullTelemetryClient.track_dependency
  isExternal: false
  name: 'track_dependency(name: str, data: str, type_name: str = None, target: str
    = None, duration: int = None, success: bool = None, result_code: str = None, properties:
    typing.Dict[str, object] = None, measurements: typing.Dict[str, object] = None,
    dependency_id: str = None)'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_dependency
- fullName: botbuilder.core.NullTelemetryClient.track_event
  isExternal: false
  name: 'track_event(name: str, properties: typing.Dict[str, object] = None, measurements:
    typing.Dict[str, object] = None) -> None'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_event
- fullName: botbuilder.core.NullTelemetryClient.track_exception
  isExternal: false
  name: track_exception
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_exception
- fullName: botbuilder.core.NullTelemetryClient.track_metric
  isExternal: false
  name: 'track_metric(name: str, value: float, tel_type: botbuilder.core.bot_telemetry_client.TelemetryDataPointType
    = None, count: int = None, min_val: float = None, max_val: float = None, std_dev:
    float = None, properties: typing.Dict[str, object] = None) -> NotImplemented'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_metric
- fullName: botbuilder.core.NullTelemetryClient.track_pageview
  isExternal: false
  name: 'track_pageview(name: str, url, duration: int = 0, properties: typing.Dict[str,
    object] = None, measurements: typing.Dict[str, object] = None) -> None'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_pageview
- fullName: botbuilder.core.NullTelemetryClient.track_request
  isExternal: false
  name: 'track_request(name: str, url: str, success: bool, start_time: str = None,
    duration: int = None, response_code: str = None, http_method: str = None, properties:
    typing.Dict[str, object] = None, measurements: typing.Dict[str, object] = None,
    request_id: str = None)'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_request
- fullName: botbuilder.core.NullTelemetryClient.track_trace
  isExternal: false
  name: 'track_trace(name, properties=None, severity: botbuilder.core.bot_telemetry_client.Severity
    = None)'
  parent: botbuilder.core.NullTelemetryClient
  uid: botbuilder.core.NullTelemetryClient.track_trace
