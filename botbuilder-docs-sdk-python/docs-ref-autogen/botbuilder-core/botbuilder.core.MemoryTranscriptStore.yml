### YamlMime:PythonClass
uid: botbuilder.core.MemoryTranscriptStore
name: MemoryTranscriptStore
fullName: botbuilder.core.MemoryTranscriptStore
module: botbuilder.core
inheritances:
- botbuilder.core.transcript_logger.TranscriptStore
summary: 'This provider is most useful for simulating production storage when running
  locally against the

  emulator or as part of a unit test.'
constructor:
  syntax: MemoryTranscriptStore()
methods:
- uid: botbuilder.core.MemoryTranscriptStore.delete_transcript
  name: delete_transcript
  signature: 'async delete_transcript(channel_id: str, conversation_id: str) -> None'
  parameters:
  - name: channel_id
    isRequired: true
  - name: conversation_id
    isRequired: true
- uid: botbuilder.core.MemoryTranscriptStore.get_transcript_activities
  name: get_transcript_activities
  signature: 'async get_transcript_activities(channel_id: str, conversation_id: str,
    continuation_token: str = None, start_date: <module ''datetime'' from ''C:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\datetime.py''>
    = datetime.datetime(1, 1, 1, 0, 0)) -> PagedResult[Activity]'
  parameters:
  - name: channel_id
    isRequired: true
  - name: conversation_id
    isRequired: true
  - name: continuation_token
    defaultValue: None
  - name: start_date
    defaultValue: '0001-01-01 00:00:00'
- uid: botbuilder.core.MemoryTranscriptStore.list_transcripts
  name: list_transcripts
  signature: 'async list_transcripts(channel_id: str, continuation_token: str = None)
    -> PagedResult[TranscriptInfo]'
  parameters:
  - name: channel_id
    isRequired: true
  - name: continuation_token
    defaultValue: None
- uid: botbuilder.core.MemoryTranscriptStore.log_activity
  name: log_activity
  signature: 'async log_activity(activity: Activity) -> None'
  parameters:
  - name: activity
    isRequired: true
attributes:
- uid: botbuilder.core.MemoryTranscriptStore.channels
  name: channels
  signature: 'channels: Dict[str, Dict[str, Activity]] = {}'
