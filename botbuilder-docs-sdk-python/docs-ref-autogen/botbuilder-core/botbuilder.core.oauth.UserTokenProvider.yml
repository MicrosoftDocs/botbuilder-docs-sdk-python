### YamlMime:PythonClass
uid: botbuilder.core.oauth.UserTokenProvider
name: UserTokenProvider
fullName: botbuilder.core.oauth.UserTokenProvider
module: botbuilder.core.oauth
inheritances:
- abc.ABC
constructor:
  syntax: UserTokenProvider()
methods:
- uid: botbuilder.core.oauth.UserTokenProvider.get_aad_tokens
  name: get_aad_tokens
  summary: 'Retrieves Azure Active Directory tokens for particular resources on a
    configured connection.

    :param context: Context for the current turn of conversation with the user.

    :param connection_name: Name of the auth connection to use.

    :param resource_urls: The list of resource URLs to retrieve tokens for.

    :param user_id: The user Id for which tokens are retrieved. If passing in None
    the userId is taken

    from the Activity in the TurnContext.

    :param oauth_app_credentials: (Optional) AppCredentials for OAuth.  If None is
    supplied, the

    Bots credentials are used.

    :return:'
  signature: 'abstract async get_aad_tokens(context: TurnContext, connection_name:
    str, resource_urls: List[str], user_id: str = None, oauth_app_credentials: AppCredentials
    = None) -> Dict[str, TokenResponse]'
  parameters:
  - name: context
    isRequired: true
  - name: connection_name
    isRequired: true
  - name: resource_urls
    isRequired: true
  - name: user_id
    defaultValue: None
  - name: oauth_app_credentials
    defaultValue: None
- uid: botbuilder.core.oauth.UserTokenProvider.get_oauth_sign_in_link
  name: get_oauth_sign_in_link
  summary: 'Get the raw signin link to be sent to the user for signin for a connection
    name.

    :param context: Context for the current turn of conversation with the user.

    :param connection_name: Name of the auth connection to use.

    :param final_redirect: The final URL that the OAuth flow will redirect to.

    :param oauth_app_credentials: (Optional) AppCredentials for OAuth.  If None is
    supplied, the

    Bots credentials are used.

    :return:'
  signature: 'abstract async get_oauth_sign_in_link(context: TurnContext, connection_name:
    str, final_redirect: str = None, oauth_app_credentials: AppCredentials = None)
    -> str'
  parameters:
  - name: context
    isRequired: true
  - name: connection_name
    isRequired: true
  - name: final_redirect
    defaultValue: None
  - name: oauth_app_credentials
    defaultValue: None
- uid: botbuilder.core.oauth.UserTokenProvider.get_token_status
  name: get_token_status
  summary: 'Retrieves Azure Active Directory tokens for particular resources on a
    configured connection.

    :param context: Context for the current turn of conversation with the user.

    :param connection_name: Name of the auth connection to use.

    :param user_id: The user Id for which token status is retrieved.

    :param include_filter: Optional comma separated list of connection''s to include.
    Blank will return token status

    for all configured connections.

    :param oauth_app_credentials: (Optional) AppCredentials for OAuth.  If None is
    supplied, the

    Bots credentials are used.

    :return:'
  signature: 'abstract async get_token_status(context: TurnContext, connection_name:
    str = None, user_id: str = None, include_filter: str = None, oauth_app_credentials:
    AppCredentials = None) -> Dict[str, TokenResponse]'
  parameters:
  - name: context
    isRequired: true
  - name: connection_name
    defaultValue: None
  - name: user_id
    defaultValue: None
  - name: include_filter
    defaultValue: None
  - name: oauth_app_credentials
    defaultValue: None
- uid: botbuilder.core.oauth.UserTokenProvider.get_user_token
  name: get_user_token
  summary: 'Retrieves the OAuth token for a user that is in a sign-in flow.

    :param context: Context for the current turn of conversation with the user.

    :param connection_name: Name of the auth connection to use.

    :param magic_code: (Optional) Optional user entered code to validate.

    :param oauth_app_credentials: (Optional) AppCredentials for OAuth.  If None is
    supplied, the

    Bots credentials are used.

    :return:'
  signature: 'abstract async get_user_token(context: TurnContext, connection_name:
    str, magic_code: str = None, oauth_app_credentials: AppCredentials = None) ->
    TokenResponse'
  parameters:
  - name: context
    isRequired: true
  - name: connection_name
    isRequired: true
  - name: magic_code
    defaultValue: None
  - name: oauth_app_credentials
    defaultValue: None
- uid: botbuilder.core.oauth.UserTokenProvider.sign_out_user
  name: sign_out_user
  summary: 'Signs the user out with the token server.

    :param context: Context for the current turn of conversation with the user.

    :param connection_name: Name of the auth connection to use.

    :param user_id: User id of user to sign out.

    :param oauth_app_credentials: (Optional) AppCredentials for OAuth.  If None is
    supplied, the

    Bots credentials are used.

    :return:'
  signature: 'abstract async sign_out_user(context: TurnContext, connection_name:
    str = None, user_id: str = None, oauth_app_credentials: AppCredentials = None)'
  parameters:
  - name: context
    isRequired: true
  - name: connection_name
    defaultValue: None
  - name: user_id
    defaultValue: None
  - name: oauth_app_credentials
    defaultValue: None
