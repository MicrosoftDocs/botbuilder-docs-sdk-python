### YamlMime:PythonClass
uid: botbuilder.core.TelemetryLoggerMiddleware
name: TelemetryLoggerMiddleware
fullName: botbuilder.core.TelemetryLoggerMiddleware
module: botbuilder.core
inheritances:
- botbuilder.core.middleware_set.Middleware
summary: Middleware for logging incoming, outgoing, updated or deleted Activity messages.
constructor:
  syntax: 'TelemetryLoggerMiddleware(telemetry_client: botbuilder.core.bot_telemetry_client.BotTelemetryClient,
    log_personal_information: bool)'
methods:
- uid: botbuilder.core.TelemetryLoggerMiddleware.fill_delete_event_properties
  name: fill_delete_event_properties
  summary: "Fills the event properties for the BotMessageDelete.\nThese properties\
    \ are logged when an activity message is deleted by the Bot.\n:param activity:\
    \ activity sent from user.\n:param additional_properties: Additional properties\
    \ to add to the event.\nAdditional properties can override \u201Cstock\u201D properties.\n\
    \nBotTelemetryClient.track_event method for the BotMessageUpdate event."
  signature: 'fill_delete_event_properties(activity: botbuilder.schema._models_py3.Activity,
    additional_properties: Optional[Dict[str, str]] = None)'
  return:
    description: "A dictionary that is sent as \u201CProperties\u201D to the"
- uid: botbuilder.core.TelemetryLoggerMiddleware.fill_receive_event_properties
  name: fill_receive_event_properties
  summary: "Fills the event properties for the BotMessageReceived.\nAdheres to the\
    \ LogPersonalInformation flag to filter Name, Text and Speak properties.\n:param\
    \ activity: activity sent from user.\n:param additional_properties: Additional\
    \ properties to add to the event.\nAdditional properties can override \u201Cstock\u201D\
    \ properties.\n\nBotTelemetryClient.track_event method for the BotMessageReceived\
    \ event."
  signature: 'fill_receive_event_properties(activity: botbuilder.schema._models_py3.Activity,
    additional_properties: Optional[Dict[str, str]] = None)'
  return:
    description: "A dictionary that is sent as \u201CProperties\u201D to"
- uid: botbuilder.core.TelemetryLoggerMiddleware.fill_send_event_properties
  name: fill_send_event_properties
  summary: "Fills the event properties for the BotMessageSend.\nThese properties are\
    \ logged when an activity message is sent by the Bot to the user.\n:param activity:\
    \ activity sent from user.\n:param additional_properties: Additional properties\
    \ to add to the event.\nAdditional properties can override \u201Cstock\u201D properties.\n\
    \nBotTelemetryClient.track_event method for the BotMessageSend event."
  signature: 'fill_send_event_properties(activity: botbuilder.schema._models_py3.Activity,
    additional_properties: Optional[Dict[str, str]] = None)'
  return:
    description: "A dictionary that is sent as \u201CProperties\u201D to the"
- uid: botbuilder.core.TelemetryLoggerMiddleware.fill_update_event_properties
  name: fill_update_event_properties
  summary: "Fills the event properties for the BotMessageUpdate.\nThese properties\
    \ are logged when an activity message is updated by the Bot.\nFor example, if\
    \ a card is interacted with by the use, and the card needs\nto be updated to reflect\
    \ some interaction.\n:param activity: activity sent from user.\n:param additional_properties:\
    \ Additional properties to add to the event.\nAdditional properties can override\
    \ \u201Cstock\u201D properties.\n\nBotTelemetryClient.track_event method for the\
    \ BotMessageUpdate event."
  signature: 'fill_update_event_properties(activity: botbuilder.schema._models_py3.Activity,
    additional_properties: Optional[Dict[str, str]] = None)'
  return:
    description: "A dictionary that is sent as \u201CProperties\u201D to the"
- uid: botbuilder.core.TelemetryLoggerMiddleware.on_delete_activity
  name: on_delete_activity
  summary: "Invoked when the bot deletes a message.\nPerforms logging of telemetry\
    \ data using the BotTelemetryClient.track_event() method.\nThis event name used\
    \ is \u201CBotMessageDelete\u201D.\n:param activity: Current activity sent from\
    \ user."
  signature: 'on_delete_activity(activity: botbuilder.schema._models_py3.Activity)'
- uid: botbuilder.core.TelemetryLoggerMiddleware.on_receive_activity
  name: on_receive_activity
  summary: "Invoked when a message is received from the user.\nPerforms logging of\
    \ telemetry data using the BotTelemetryClient.track_event() method.\nThis event\
    \ name used is \u201CBotMessageReceived\u201D.\n:param activity: Current activity\
    \ sent from user."
  signature: 'on_receive_activity(activity: botbuilder.schema._models_py3.Activity)'
- uid: botbuilder.core.TelemetryLoggerMiddleware.on_send_activity
  name: on_send_activity
  summary: "Invoked when the bot sends a message to the user.\nPerforms logging of\
    \ telemetry data using the BotTelemetryClient.track_event() method.\nThis event\
    \ name used is \u201CBotMessageSend\u201D.\n:param activity: Current activity\
    \ sent from bot."
  signature: 'on_send_activity(activity: botbuilder.schema._models_py3.Activity)'
- uid: botbuilder.core.TelemetryLoggerMiddleware.on_turn
  name: on_turn
  summary: 'Logs events based on incoming and outgoing activities using

    BotTelemetryClient base class'
  signature: 'on_turn(context: botbuilder.core.turn_context.TurnContext, logic_fn:
    Callable[botbuilder.core.turn_context.TurnContext, Awaitable])'
  parameters:
  - name: turn_context
    description: The context object for this turn.
    isRequired: true
  - name: logic
    description: Callable to continue the bot middleware pipeline
    isRequired: true
  return:
    description: None
- uid: botbuilder.core.TelemetryLoggerMiddleware.on_update_activity
  name: on_update_activity
  summary: "Invoked when the bot updates a message.\nPerforms logging of telemetry\
    \ data using the BotTelemetryClient.track_event() method.\nThis event name used\
    \ is \u201CBotMessageUpdate\u201D.\n:param activity: Current activity sent from\
    \ user."
  signature: 'on_update_activity(activity: botbuilder.schema._models_py3.Activity)'
attributes:
- uid: botbuilder.core.TelemetryLoggerMiddleware.log_personal_information
  name: log_personal_information
  summary: 'Gets a value indicating whether determines whether to log personal

    information that came from the user.'
- uid: botbuilder.core.TelemetryLoggerMiddleware.telemetry_client
  name: telemetry_client
  summary: Gets the currently configured BotTelemetryClient.
