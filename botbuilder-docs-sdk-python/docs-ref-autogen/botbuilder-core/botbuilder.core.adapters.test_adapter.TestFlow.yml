### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.core.adapters.test_adapter.TestFlow.assert_no_reply
  - botbuilder.core.adapters.test_adapter.TestFlow.assert_reply
  - botbuilder.core.adapters.test_adapter.TestFlow.send
  - botbuilder.core.adapters.test_adapter.TestFlow.test
  class: botbuilder.core.adapters.test_adapter.TestFlow
  fullName: botbuilder.core.adapters.test_adapter.TestFlow
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: botbuilder.core.adapters.test_adapter
  name: TestFlow
  summary: ''
  syntax:
    content: 'TestFlow(previous: typing.Callable, adapter: botbuilder.core.adapters.test_adapter.TestAdapter)'
  type: class
  uid: botbuilder.core.adapters.test_adapter.TestFlow
- class: botbuilder.core.adapters.test_adapter.TestFlow
  fullName: botbuilder.core.adapters.test_adapter.TestFlow.assert_no_reply
  langs:
  - python
  module: botbuilder.core.adapters.test_adapter
  name: assert_no_reply(description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  namewithoutparameters: assert_no_reply
  summary: 'Generates an assertion if the bot responds when no response is expected.

    :param description:

    :param timeout:'
  syntax:
    content: assert_no_reply(description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  type: method
  uid: botbuilder.core.adapters.test_adapter.TestFlow.assert_no_reply
- class: botbuilder.core.adapters.test_adapter.TestFlow
  fullName: botbuilder.core.adapters.test_adapter.TestFlow.assert_reply
  langs:
  - python
  module: botbuilder.core.adapters.test_adapter
  name: 'assert_reply(expected: typing.Union[str, botbuilder.schema._models_py3.Activity,
    typing.Callable[[botbuilder.schema._models_py3.Activity, str], NoneType]], description=None,
    timeout=None, is_substring=False) -> botbuilder.core.adapters.test_adapter.TestFlow'
  namewithoutparameters: assert_reply
  summary: 'Generates an assertion if the bots response doesn''t match the expected
    text/activity.

    :param expected:

    :param description:

    :param timeout:

    :param is_substring:

    :return:'
  syntax:
    content: 'assert_reply(expected: typing.Union[str, botbuilder.schema._models_py3.Activity,
      typing.Callable[[botbuilder.schema._models_py3.Activity, str], NoneType]], description=None,
      timeout=None, is_substring=False) -> botbuilder.core.adapters.test_adapter.TestFlow'
  type: method
  uid: botbuilder.core.adapters.test_adapter.TestFlow.assert_reply
- class: botbuilder.core.adapters.test_adapter.TestFlow
  fullName: botbuilder.core.adapters.test_adapter.TestFlow.send
  langs:
  - python
  module: botbuilder.core.adapters.test_adapter
  name: send(user_says) -> botbuilder.core.adapters.test_adapter.TestFlow
  namewithoutparameters: send
  summary: 'Sends something to the bot.

    :param user_says:

    :return:'
  syntax:
    content: send(user_says) -> botbuilder.core.adapters.test_adapter.TestFlow
  type: method
  uid: botbuilder.core.adapters.test_adapter.TestFlow.send
- class: botbuilder.core.adapters.test_adapter.TestFlow
  fullName: botbuilder.core.adapters.test_adapter.TestFlow.test
  langs:
  - python
  module: botbuilder.core.adapters.test_adapter
  name: test(user_says, expected, description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  namewithoutparameters: test
  summary: 'Send something to the bot and expects the bot to return with a given reply.
    This is simply a

    wrapper around calls to *send()* and *assertReply()*. This is such a common pattern
    that a

    helper is provided.

    :param user_says:

    :param expected:

    :param description:

    :param timeout:

    :return:'
  syntax:
    content: test(user_says, expected, description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  type: method
  uid: botbuilder.core.adapters.test_adapter.TestFlow.test
references:
- fullName: botbuilder.core.adapters.test_adapter.TestFlow.assert_no_reply
  isExternal: false
  name: assert_no_reply(description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  parent: botbuilder.core.adapters.test_adapter.TestFlow
  uid: botbuilder.core.adapters.test_adapter.TestFlow.assert_no_reply
- fullName: botbuilder.core.adapters.test_adapter.TestFlow.assert_reply
  isExternal: false
  name: 'assert_reply(expected: typing.Union[str, botbuilder.schema._models_py3.Activity,
    typing.Callable[[botbuilder.schema._models_py3.Activity, str], NoneType]], description=None,
    timeout=None, is_substring=False) -> botbuilder.core.adapters.test_adapter.TestFlow'
  parent: botbuilder.core.adapters.test_adapter.TestFlow
  uid: botbuilder.core.adapters.test_adapter.TestFlow.assert_reply
- fullName: botbuilder.core.adapters.test_adapter.TestFlow.send
  isExternal: false
  name: send(user_says) -> botbuilder.core.adapters.test_adapter.TestFlow
  parent: botbuilder.core.adapters.test_adapter.TestFlow
  uid: botbuilder.core.adapters.test_adapter.TestFlow.send
- fullName: botbuilder.core.adapters.test_adapter.TestFlow.test
  isExternal: false
  name: test(user_says, expected, description=None, timeout=None) -> botbuilder.core.adapters.test_adapter.TestFlow
  parent: botbuilder.core.adapters.test_adapter.TestFlow
  uid: botbuilder.core.adapters.test_adapter.TestFlow.test
