### YamlMime:PythonClass
uid: botbuilder.integration.aiohttp.skills.skill_http_client.SkillHttpClient
name: SkillHttpClient
fullName: botbuilder.integration.aiohttp.skills.skill_http_client.SkillHttpClient
module: botbuilder.integration.aiohttp.skills.skill_http_client
inheritances:
- botbuilder.integration.aiohttp.bot_framework_http_client.BotFrameworkHttpClient
constructor:
  syntax: 'SkillHttpClient(credential_provider: botframework.connector.auth.credential_provider.SimpleCredentialProvider,
    skill_conversation_id_factory: botbuilder.core.skills.conversation_id_factory.ConversationIdFactoryBase,
    channel_provider: Optional[botframework.connector.auth.channel_provider.ChannelProvider]
    = None, logger: Optional[logging.Logger] = None)'
methods:
- uid: botbuilder.integration.aiohttp.skills.skill_http_client.SkillHttpClient.post_activity_to_skill
  name: post_activity_to_skill
  signature: 'async post_activity_to_skill(from_bot_id: str, to_skill: botbuilder.core.skills.bot_framework_skill.BotFrameworkSkill,
    service_url: str, activity: botbuilder.schema._models_py3.Activity, originating_audience:
    Optional[str] = None) -> botbuilder.schema._models_py3.InvokeResponse'
  parameters:
  - name: from_bot_id
    isRequired: true
  - name: to_skill
    isRequired: true
  - name: service_url
    isRequired: true
  - name: activity
    isRequired: true
  - name: originating_audience
    defaultValue: None
