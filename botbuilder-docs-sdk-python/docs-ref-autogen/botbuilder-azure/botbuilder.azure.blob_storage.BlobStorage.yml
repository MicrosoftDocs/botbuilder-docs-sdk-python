### YamlMime:PythonClass
uid: botbuilder.azure.blob_storage.BlobStorage
name: BlobStorage
fullName: botbuilder.azure.blob_storage.BlobStorage
module: botbuilder.azure.blob_storage
inheritances:
- botbuilder.core.storage.Storage
summary: "An Azure Blob based storage provider for a bot.\n\nThis class uses a single\
  \ Azure Storage Blob Container.\nEach entity or StoreItem is serialized into a JSON\
  \ string and stored in an individual text blob.\nEach blob is named after the store\
  \ item key,  which is encoded so that it conforms a valid blob name.\nIf an entity\
  \ is an StoreItem, the storage object will set the entity\u2019s e_tag\nproperty\
  \ value to the blob\u2019s e_tag upon read. Afterward, an match_condition with the\
  \ ETag value\nwill be generated during Write. New entities start with a null e_tag."
constructor:
  syntax: 'BlobStorage(settings: botbuilder.azure.blob_storage.BlobStorageSettings)'
  parameters:
  - name: settings
    description: Settings used to instantiate the Blob service.
    types:
    - <xref:botbuilder.azure.BlobStorageSettings>
methods:
- uid: botbuilder.azure.blob_storage.BlobStorage.delete
  name: delete
  summary: Deletes entity blobs from the configured container.
  signature: 'delete(keys: List[str])'
  parameters:
  - name: keys
    description: An array of entity keys.
    isRequired: true
    types:
    - Dict[str, object]
- uid: botbuilder.azure.blob_storage.BlobStorage.read
  name: read
  summary: Retrieve entities from the configured blob container.
  signature: 'read(keys: List[str])'
  parameters:
  - name: keys
    description: An array of entity keys.
    isRequired: true
    types:
    - Dict[str, object]
- uid: botbuilder.azure.blob_storage.BlobStorage.write
  name: write
  summary: Stores a new entity in the configured blob container.
  signature: 'write(changes: Dict[str, object])'
  parameters:
  - name: changes
    description: The changes to write to storage.
    isRequired: true
    types:
    - Dict[str, object]
