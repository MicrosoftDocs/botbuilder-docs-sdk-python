### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botframework.connector.auth.credential_provider.CredentialProvider.get_app_password
  - botframework.connector.auth.credential_provider.CredentialProvider.is_authentication_disabled
  - botframework.connector.auth.credential_provider.CredentialProvider.is_valid_appid
  class: botframework.connector.auth.credential_provider.CredentialProvider
  fullName: botframework.connector.auth.credential_provider.CredentialProvider
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: botframework.connector.auth.credential_provider
  name: CredentialProvider
  summary: 'CredentialProvider.

    This class allows Bots to provide their own implemention

    of what is, and what is not, a valid appId and password.

    This is useful in the case of multi-tenant bots, where the bot

    may need to call out to a service to determine if a particular

    appid/password pair is valid.'
  syntax: {}
  type: class
  uid: botframework.connector.auth.credential_provider.CredentialProvider
- class: botframework.connector.auth.credential_provider.CredentialProvider
  fullName: botframework.connector.auth.credential_provider.CredentialProvider.get_app_password
  langs:
  - python
  module: botframework.connector.auth.credential_provider
  name: 'get_app_password(app_id: str) -> str'
  summary: 'Get the app password for a given bot appId, if it is not a valid appId,
    return Null


    This method is async to enable custom implementations

    that may need to call out to serviced to validate the appId / password pair.'
  syntax:
    content: 'get_app_password(app_id: str) -> str'
    parameters:
    - description: bot appid
      id: app_id
    return:
      description: password or null for invalid appid
  type: method
  uid: botframework.connector.auth.credential_provider.CredentialProvider.get_app_password
- class: botframework.connector.auth.credential_provider.CredentialProvider
  fullName: botframework.connector.auth.credential_provider.CredentialProvider.is_authentication_disabled
  langs:
  - python
  module: botframework.connector.auth.credential_provider
  name: is_authentication_disabled() -> bool
  summary: 'Checks if bot authentication is disabled.


    Return true if bot authentication is disabled.

    This method is async to enable custom implementations

    that may need to call out to serviced to validate the appId / password pair.'
  syntax:
    content: is_authentication_disabled() -> bool
    return:
      description: true if bot authentication is disabled.
  type: method
  uid: botframework.connector.auth.credential_provider.CredentialProvider.is_authentication_disabled
- class: botframework.connector.auth.credential_provider.CredentialProvider
  fullName: botframework.connector.auth.credential_provider.CredentialProvider.is_valid_appid
  langs:
  - python
  module: botframework.connector.auth.credential_provider
  name: 'is_valid_appid(app_id: str) -> bool'
  summary: 'Validate AppId.


    This method is async to enable custom implementations

    that may need to call out to serviced to validate the appId / password pair.'
  syntax:
    content: 'is_valid_appid(app_id: str) -> bool'
    parameters:
    - description: bot appid
      id: app_id
    return:
      description: true if it is a valid AppId
  type: method
  uid: botframework.connector.auth.credential_provider.CredentialProvider.is_valid_appid
references:
- fullName: botframework.connector.auth.credential_provider.CredentialProvider.get_app_password
  isExternal: false
  name: 'get_app_password(app_id: str) -> str'
  parent: botframework.connector.auth.credential_provider.CredentialProvider
  uid: botframework.connector.auth.credential_provider.CredentialProvider.get_app_password
- fullName: botframework.connector.auth.credential_provider.CredentialProvider.is_authentication_disabled
  isExternal: false
  name: is_authentication_disabled() -> bool
  parent: botframework.connector.auth.credential_provider.CredentialProvider
  uid: botframework.connector.auth.credential_provider.CredentialProvider.is_authentication_disabled
- fullName: botframework.connector.auth.credential_provider.CredentialProvider.is_valid_appid
  isExternal: false
  name: 'is_valid_appid(app_id: str) -> bool'
  parent: botframework.connector.auth.credential_provider.CredentialProvider
  uid: botframework.connector.auth.credential_provider.CredentialProvider.is_valid_appid
