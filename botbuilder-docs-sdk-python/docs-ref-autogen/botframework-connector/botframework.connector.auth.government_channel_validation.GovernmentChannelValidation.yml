### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token
  - botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token_with_service_url
  - botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.validate_identity
  - botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.OPEN_ID_METADATA_ENDPOINT
  - botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
  class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  inheritance:
  - inheritance:
    - type: builtins.object
    type: abc.ABC
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: GovernmentChannelValidation
  summary: ''
  syntax: {}
  type: class
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
- class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: 'authenticate_channel_token(auth_header: str, credentials: botframework.connector.auth.credential_provider.CredentialProvider,
    channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
    = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  namewithoutparameters: authenticate_channel_token
  syntax:
    content: 'authenticate_channel_token(auth_header: str, credentials: botframework.connector.auth.credential_provider.CredentialProvider,
      channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
      = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  type: method
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token
- class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token_with_service_url
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: 'authenticate_channel_token_with_service_url(auth_header: str, credentials:
    botframework.connector.auth.credential_provider.CredentialProvider, service_url:
    str, channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
    = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  namewithoutparameters: authenticate_channel_token_with_service_url
  syntax:
    content: 'authenticate_channel_token_with_service_url(auth_header: str, credentials:
      botframework.connector.auth.credential_provider.CredentialProvider, service_url:
      str, channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
      = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  type: method
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token_with_service_url
- class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.validate_identity
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: 'validate_identity(identity: botframework.connector.auth.claims_identity.ClaimsIdentity,
    credentials: botframework.connector.auth.credential_provider.CredentialProvider)
    -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  namewithoutparameters: validate_identity
  syntax:
    content: 'validate_identity(identity: botframework.connector.auth.claims_identity.ClaimsIdentity,
      credentials: botframework.connector.auth.credential_provider.CredentialProvider)
      -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  type: method
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.validate_identity
- class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.OPEN_ID_METADATA_ENDPOINT
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: OPEN_ID_METADATA_ENDPOINT
  syntax:
    content: OPEN_ID_METADATA_ENDPOINT = ''
  type: attribute
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.OPEN_ID_METADATA_ENDPOINT
- class: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
  langs:
  - python
  module: botframework.connector.auth.government_channel_validation
  name: TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
  syntax:
    content: TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS = <botframework.connector.auth.verify_options.VerifyOptions
      object>
  type: attribute
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
references:
- fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token
  isExternal: false
  name: 'authenticate_channel_token(auth_header: str, credentials: botframework.connector.auth.credential_provider.CredentialProvider,
    channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
    = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  parent: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token
- fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token_with_service_url
  isExternal: false
  name: 'authenticate_channel_token_with_service_url(auth_header: str, credentials:
    botframework.connector.auth.credential_provider.CredentialProvider, service_url:
    str, channel_id: str, auth_configuration: botframework.connector.auth.authentication_configuration.AuthenticationConfiguration
    = None) -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  parent: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.authenticate_channel_token_with_service_url
- fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.validate_identity
  isExternal: false
  name: 'validate_identity(identity: botframework.connector.auth.claims_identity.ClaimsIdentity,
    credentials: botframework.connector.auth.credential_provider.CredentialProvider)
    -> botframework.connector.auth.claims_identity.ClaimsIdentity'
  parent: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.validate_identity
- fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.OPEN_ID_METADATA_ENDPOINT
  isExternal: false
  name: OPEN_ID_METADATA_ENDPOINT
  parent: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.OPEN_ID_METADATA_ENDPOINT
- fullName: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
  isExternal: false
  name: TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
  parent: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation
  uid: botframework.connector.auth.government_channel_validation.GovernmentChannelValidation.TO_BOT_FROM_GOVERNMENT_CHANNEL_TOKEN_VALIDATION_PARAMETERS
