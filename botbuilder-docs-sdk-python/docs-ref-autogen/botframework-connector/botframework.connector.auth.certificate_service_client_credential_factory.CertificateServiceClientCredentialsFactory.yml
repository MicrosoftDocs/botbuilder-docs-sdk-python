### YamlMime:PythonClass
uid: botframework.connector.auth.certificate_service_client_credential_factory.CertificateServiceClientCredentialsFactory
name: CertificateServiceClientCredentialsFactory
fullName: botframework.connector.auth.certificate_service_client_credential_factory.CertificateServiceClientCredentialsFactory
module: botframework.connector.auth.certificate_service_client_credential_factory
summary: 'CertificateServiceClientCredentialsFactory implementation using a certificate.


  through ''x5c'' JWT header only for subject name and issuer authentication to support
  cert auto rolls.'
constructor:
  syntax: 'CertificateServiceClientCredentialsFactory(certificate_thumbprint: str,
    certificate_private_key: str, app_id: str, tenant_id: str = None, certificate_public:
    str = None, *, logger: Logger = None)'
  parameters:
  - name: certificate_thumbprint
    isRequired: true
  - name: certificate_private_key
    isRequired: true
  - name: app_id
    isRequired: true
  - name: tenant_id
    defaultValue: None
  - name: certificate_public
    description: public_certificate (optional) is public key certificate which will
      be sent
    defaultValue: None
  keywordOnlyParameters:
  - name: logger
    isRequired: true
methods:
- uid: botframework.connector.auth.certificate_service_client_credential_factory.CertificateServiceClientCredentialsFactory.create_credentials
  name: create_credentials
  signature: 'async create_credentials(app_id: str, oauth_scope: str, login_endpoint:
    str, validate_authority: bool) -> Authentication'
  parameters:
  - name: app_id
    isRequired: true
  - name: oauth_scope
    isRequired: true
  - name: login_endpoint
    isRequired: true
  - name: validate_authority
    isRequired: true
- uid: botframework.connector.auth.certificate_service_client_credential_factory.CertificateServiceClientCredentialsFactory.is_authentication_disabled
  name: is_authentication_disabled
  signature: async is_authentication_disabled() -> bool
- uid: botframework.connector.auth.certificate_service_client_credential_factory.CertificateServiceClientCredentialsFactory.is_valid_app_id
  name: is_valid_app_id
  signature: 'async is_valid_app_id(app_id: str) -> bool'
  parameters:
  - name: app_id
    isRequired: true
