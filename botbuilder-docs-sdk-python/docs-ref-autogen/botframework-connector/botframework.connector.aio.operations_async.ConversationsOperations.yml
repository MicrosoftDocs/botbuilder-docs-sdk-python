### YamlMime:PythonClass
uid: botframework.connector.aio.operations_async.ConversationsOperations
name: ConversationsOperations
fullName: botframework.connector.aio.operations_async.ConversationsOperations
module: botframework.connector.aio.operations_async
inheritances:
- builtins.object
summary: "ConversationsOperations async operations.\n\nYou should not instantiate\
  \ directly this class, but create a Client instance that will create it for you\
  \ and attach\n   it as attribute."
constructor:
  syntax: ConversationsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: 'The API version to use for the request. Constant value: "v3".'
  name: "api_version \u2013 The API version to use for the request. Constant value:\
    \ \u201Cv3\u201D"
methods:
- uid: botframework.connector.aio.operations_async.ConversationsOperations.create_conversation
  name: create_conversation
  summary: 'CreateConversation.


    Create a new Conversation.

    POST to this method with a

    * Bot being the bot creating the conversation

    * IsGroup set to true if this is not a direct message (default is

    false)

    * Array containing the members to include in the conversation

    The return value is a ResourceResponse which contains a conversation id

    which is suitable for use

    in the message payload and REST API uris.

    Most channels only support the semantics of bots initiating a direct

    message conversation.  An example of how to do that would be:

    ``

    var resource = await connector.conversations.CreateConversation(new

    ConversationParameters(){ Bot = bot, members = new ChannelAccount[] {

    new ChannelAccount("user1") } );

    await connect.Conversations.SendToConversationAsync(resource.Id, new

    Activity() ... ) ;

    ``.'
  signature: create_conversation(parameters, *, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: parameters
    description: Parameters to create the conversation from
    isRequired: true
    types:
    - <xref:botframework.connector.models.ConversationParameters>
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ConversationResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ConversationResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.delete_activity
  name: delete_activity
  summary: 'DeleteActivity.


    Delete an existing activity.

    Some channels allow you to delete an existing activity, and if

    successful this method will remove the specified activity.'
  signature: delete_activity(conversation_id, activity_id, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity_id
    description: activityId to delete
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.delete_conversation_member
  name: delete_conversation_member
  summary: 'DeleteConversationMember.


    Deletes a member from a conversation.

    This REST API takes a ConversationId and a memberId (of type string)

    and removes that member from the conversation. If that member was the

    last member

    of the conversation, the conversation will also be deleted.'
  signature: delete_conversation_member(conversation_id, member_id, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: member_id
    description: ID of the member to delete from this conversation
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_activity_members
  name: get_activity_members
  summary: 'GetActivityMembers.


    Enumerate the members of an activity.

    This REST API takes a ConversationId and a ActivityId, returning an

    array of ChannelAccount objects representing the members of the

    particular activity in the conversation.'
  signature: get_activity_members(conversation_id, activity_id, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity_id
    description: Activity ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.ChannelAccount>]'
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_conversation_member
  name: get_conversation_member
  summary: 'GetConversationMember.


    Get a member of a conversation.

    This REST API takes a ConversationId and memberId and returns a

    ChannelAccount object representing the member of the conversation.'
  signature: get_conversation_member(conversation_id, member_id, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation Id
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: member_id
    description: Member Id
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.ChannelAccount>]'
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_conversation_members
  name: get_conversation_members
  summary: 'GetConversationMembers.


    Enumerate the members of a conversation.

    This REST API takes a ConversationId and returns an array of

    ChannelAccount objects representing the members of the conversation.'
  signature: get_conversation_members(conversation_id, *, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.ChannelAccount>]'
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_conversation_paged_members
  name: get_conversation_paged_members
  summary: 'GetConversationPagedMembers.


    Enumerate the members of a conversation one page at a time.

    This REST API takes a ConversationId. Optionally a pageSize and/or

    continuationToken can be provided. It returns a PagedMembersResult,

    which contains an array

    of ChannelAccounts representing the members of the conversation and a

    continuation token that can be used to get more values.

    One page of ChannelAccounts records are returned with each call. The

    number of records in a page may vary between channels and calls. The

    pageSize parameter can be used as

    a suggestion. If there are no additional results the response will not

    contain a continuation token. If there are no members in the

    conversation the Members will be empty or not present in the response.

    A response to a request that has a continuation token from a prior

    request may rarely return members from a previous request.'
  signature: get_conversation_paged_members(conversation_id, page_size=None, continuation_token=None,
    *, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: page_size
    description: Suggested page size
    defaultValue: None
    types:
    - '[int](https://docs.python.org/3.6/library/functions.html#int)'
  - name: continuation_token
    description: Continuation Token
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: PagedMembersResult or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.PagedMembersResult>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_conversations
  name: get_conversations
  summary: 'GetConversations.


    List the Conversations in which this bot has participated.

    GET from this method with a skip token

    The return value is a ConversationsResult, which contains an array of

    ConversationMembers and a skip token.  If the skip token is not empty,

    then

    there are further values to be returned. Call this method again with

    the returned token to get more values.

    Each ConversationMembers object contains the ID of the conversation and

    an array of ChannelAccounts that describe the members of the

    conversation.'
  signature: get_conversations(continuation_token=None, *, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: continuation_token
    description: skip or continuation token
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ConversationsResult or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ConversationsResult>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.get_teams_conversation_paged_members
  name: get_teams_conversation_paged_members
  summary: 'GetTeamsConversationPagedMembers.


    Enumerate the members of a Teams conversation one page at a time.

    This REST API takes a ConversationId. Optionally a pageSize and/or

    continuationToken can be provided. It returns a PagedMembersResult,

    which contains an array

    of ChannelAccounts representing the members of the conversation and a

    continuation token that can be used to get more values.

    One page of ChannelAccounts records are returned with each call. The

    number of records in a page may vary between channels and calls. The

    pageSize parameter can be used as

    a suggestion. If there are no additional results the response will not

    contain a continuation token. If there are no members in the

    conversation the Members will be empty or not present in the response.

    A response to a request that has a continuation token from a prior

    request may rarely return members from a previous request.'
  signature: get_teams_conversation_paged_members(conversation_id, page_size=None,
    continuation_token=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: page_size
    description: Suggested page size
    defaultValue: None
    types:
    - '[int](https://docs.python.org/3.6/library/functions.html#int)'
  - name: continuation_token
    description: Continuation Token
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: PagedMembersResult or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.PagedMembersResult>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.reply_to_activity
  name: reply_to_activity
  summary: 'ReplyToActivity.


    This method allows you to reply to an activity.

    This is slightly different from SendToConversation().

    * SendToConversation(conversationId) - will append the activity to the

    end of the conversation according to the timestamp or semantics of the

    channel.

    * ReplyToActivity(conversationId,ActivityId) - adds the activity as a

    reply to another activity, if the channel supports it. If the channel

    does not support nested replies, ReplyToActivity falls back to

    SendToConversation.

    Use ReplyToActivity when replying to a specific activity in the

    conversation.

    Use SendToConversation in all other cases.'
  signature: reply_to_activity(conversation_id, activity_id, activity, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity_id
    description: activityId the reply is to (OPTIONAL)
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity
    description: Activity to send
    isRequired: true
    types:
    - <xref:botframework.connector.models.Activity>
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.send_conversation_history
  name: send_conversation_history
  summary: 'SendConversationHistory.


    This method allows you to upload the historic activities to the

    conversation.

    Sender must ensure that the historic activities have unique ids and

    appropriate timestamps. The ids are used by the client to deal with

    duplicate activities and the timestamps are used by the client to

    render the activities in the right order.'
  signature: send_conversation_history(conversation_id, activities=None, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activities
    description: 'A collection of Activities that conforms to the

      Transcript schema.'
    defaultValue: None
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.Activity>]'
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.send_to_conversation
  name: send_to_conversation
  summary: 'SendToConversation.


    This method allows you to send an activity to the end of a

    conversation.

    This is slightly different from ReplyToActivity().

    * SendToConversation(conversationId) - will append the activity to the

    end of the conversation according to the timestamp or semantics of the

    channel.

    * ReplyToActivity(conversationId,ActivityId) - adds the activity as a

    reply to another activity, if the channel supports it. If the channel

    does not support nested replies, ReplyToActivity falls back to

    SendToConversation.

    Use ReplyToActivity when replying to a specific activity in the

    conversation.

    Use SendToConversation in all other cases.'
  signature: send_to_conversation(conversation_id, activity, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity
    description: Activity to send
    isRequired: true
    types:
    - <xref:botframework.connector.models.Activity>
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.update_activity
  name: update_activity
  summary: 'UpdateActivity.


    Edit an existing activity.

    Some channels allow you to edit an existing activity to reflect the new

    state of a bot conversation.

    For example, you can remove buttons after someone has clicked "Approve"

    button.'
  signature: update_activity(conversation_id, activity_id, activity, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity_id
    description: activityId to update
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: activity
    description: replacement Activity
    isRequired: true
    types:
    - <xref:botframework.connector.models.Activity>
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
- uid: botframework.connector.aio.operations_async.ConversationsOperations.upload_attachment
  name: upload_attachment
  summary: 'UploadAttachment.


    Upload an attachment directly into a channel''s blob storage.

    This is useful because it allows you to store data in a compliant store

    when dealing with enterprises.

    The response is a ResourceResponse which contains an AttachmentId which

    is suitable for using with the attachments API.'
  signature: upload_attachment(conversation_id, attachment_upload, *, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: conversation_id
    description: Conversation ID
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: attachment_upload
    description: Attachment data
    isRequired: true
    types:
    - <xref:botframework.connector.models.AttachmentData>
  - name: custom_headers
    description: headers that will be added to the request
    isRequired: true
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)'
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    isRequired: true
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ResourceResponse or ClientRawResponse if raw=true
    types:
    - <xref:botframework.connector.models.ResourceResponse>
    - <xref:msrest.pipeline.ClientRawResponse>
attributes:
- uid: botframework.connector.aio.operations_async.ConversationsOperations.models
  name: models
  signature: models = <module 'botframework.connector.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\botframework\\connector\\models\\__init__.py'>
