### YamlMime:PythonClass
uid: botbuilder.adapters.slack.SlackAdapter
name: SlackAdapter
fullName: botbuilder.adapters.slack.SlackAdapter
module: botbuilder.adapters.slack
inheritances:
- botbuilder.core.bot_adapter.BotAdapter
- abc.ABC
summary: "BotAdapter that can handle incoming Slack events. Incoming Slack events\
  \ are deserialized to an Activity that is\n   dispatched through the middleware\
  \ and bot pipeline."
constructor:
  syntax: 'SlackAdapter(client: SlackClient, on_turn_error: Callable[[TurnContext,
    Exception], Awaitable] = None, options: SlackAdapterOptions = None)'
  parameters:
  - name: client
  - name: on_turn_error
    defaultValue: None
  - name: options
    defaultValue: None
methods:
- uid: botbuilder.adapters.slack.SlackAdapter.continue_conversation
  name: continue_conversation
  summary: Send a proactive message to a conversation.
  signature: 'async continue_conversation(reference: ConversationReference, callback:
    Callable, bot_id: str = None, claims_identity: ClaimsIdentity = None, audience:
    str = None)'
  parameters:
  - name: reference
    description: A reference to the conversation to continue.
    isRequired: true
    types:
    - <xref:botbuilder.schema.ConversationReference>
  - name: callback
    description: The method to call for the resulting bot turn.
    isRequired: true
    types:
    - <xref:typing.Callable>
  - name: bot_id
    description: Unused for this override.
    defaultValue: None
    types:
    - <xref:str>
  - name: claims_identity
    description: A ClaimsIdentity for the conversation.
    defaultValue: None
    types:
    - <xref:botframework.connector.auth.ClaimsIdentity>
  - name: audience
    description: Unused for this override.
    defaultValue: None
    types:
    - <xref:str>
  remarks: "Most channels require a user to initiate a conversation with a bot before\
    \ the bot can send activities to the\n   user.\n"
- uid: botbuilder.adapters.slack.SlackAdapter.delete_activity
  name: delete_activity
  summary: Delete a previous message.
  signature: 'async delete_activity(context: TurnContext, reference: ConversationReference)'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: reference
    description: 'An object in the form "{activityId: *id of message to delete*,conversation:
      { id: *id of Slack

      channel*}}".'
    isRequired: true
    types:
    - <xref:botbuilder.schema.ConversationReference>
- uid: botbuilder.adapters.slack.SlackAdapter.process
  name: process
  summary: Accept an incoming webhook request and convert it into a TurnContext which
    can be processed by the bot's logic.
  signature: 'async process(req: Request, logic: Callable) -> Response'
  parameters:
  - name: req
    description: The aiohttp Request object.
    isRequired: true
    types:
    - <xref:aiohttp.web_request.Request>
  - name: logic
    description: The method to call for the resulting bot turn.
    isRequired: true
    types:
    - <xref:tying.Callable>
  return:
    description: The aiohttp Response.
    types:
    - '[<xref:aiohttp.web_response.Response>](<xref:aiohttp.web_response.Response>)'
- uid: botbuilder.adapters.slack.SlackAdapter.send_activities
  name: send_activities
  summary: Send a message from the bot to the messaging API.
  signature: 'async send_activities(context: TurnContext, activities: List[Activity])
    -> List[ResourceResponse]'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: activities
    description: An array of outgoing activities to be sent back to the messaging
      API.
    isRequired: true
    types:
    - <xref:typing.List>[<xref:Activity>]
  return:
    description: An array of ResourceResponse objects containing the IDs that Slack
      assigned to the sent messages.
    types:
    - <xref:typing.List>[<xref:ResourceResponse>]
- uid: botbuilder.adapters.slack.SlackAdapter.update_activity
  name: update_activity
  summary: Update a previous message with new content.
  signature: 'async update_activity(context: TurnContext, activity: Activity)'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: activity
    description: 'The updated activity in the form ''{id: *id of activity to update*,
      ...}''.'
    isRequired: true
    types:
    - <xref:botbuilder.schema.Activity>
  return:
    description: A resource response with the ID of the updated activity.
    types:
    - <xref:botbuilder.schema.ResourceResponse>
