### YamlMime:PythonClass
uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter
name: SlackAdapter
fullName: botbuilder.adapters.slack.slack_adapter.SlackAdapter
module: botbuilder.adapters.slack.slack_adapter
inheritances:
- botbuilder.core.bot_adapter.BotAdapter
- abc.ABC
summary: 'BotAdapter that can handle incoming slack events.  Incoming slack events
  are deserialized to an Activity

  that is dispatch through the middleware and bot pipeline.'
constructor:
  syntax: 'SlackAdapter(client: botbuilder.adapters.slack.slack_client.SlackClient,
    on_turn_error: typing.Callable[[botbuilder.core.turn_context.TurnContext, Exception],
    typing.Awaitable] = None)'
methods:
- uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter.continue_conversation
  name: continue_conversation
  summary: 'Sends a proactive message to a conversation. Call this method to proactively
    send a message to a conversation.

    Most _channels require a user to initiate a conversation with a bot before the
    bot can send activities

    to the user.'
  signature: 'continue_conversation(reference: botbuilder.schema._models_py3.ConversationReference,
    callback: typing.Callable, bot_id: str = None, claims_identity: botframework.connector.auth.claims_identity.ClaimsIdentity
    = None, audience: str = None)'
  parameters:
  - name: bot_id
    description: Unused for this override.
    isRequired: true
  - name: reference
    description: A reference to the conversation to continue.
    isRequired: true
  - name: callback
    description: The method to call for the resulting bot turn.
    isRequired: true
  - name: claims_identity
    description: A ClaimsIdentity for the conversation.
    isRequired: true
  - name: audience
    description: Unused for this override.
    isRequired: true
- uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter.delete_activity
  name: delete_activity
  summary: 'Standard BotBuilder adapter method to delete a previous message.



    conversation: { id: *id of slack channel*}}".'
  signature: 'delete_activity(context: botbuilder.core.turn_context.TurnContext, reference:
    botbuilder.schema._models_py3.ConversationReference)'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
  - name: reference
    description: 'An object in the form "{activityId: *id of message to delete*,'
    isRequired: true
- uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter.process
  name: process
  summary: Accept an incoming webhook request and convert it into a TurnContext which
    can be processed by the bot's logic.
  signature: 'process(req: aiohttp.web_request.Request, logic: typing.Callable) ->
    aiohttp.web_response.Response'
  parameters:
  - name: req
    description: The aoihttp Request object
    isRequired: true
  - name: logic
    description: The method to call for the resulting bot turn.
    isRequired: true
  return:
    description: The aoihttp Response
- uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter.send_activities
  name: send_activities
  summary: Standard BotBuilder adapter method to send a message from the bot to the
    messaging API.
  signature: 'send_activities(context: botbuilder.core.turn_context.TurnContext, activities:
    typing.List[botbuilder.schema._models_py3.Activity]) -> typing.List[botbuilder.schema._models_py3.ResourceResponse]'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
  - name: activities
    description: An array of outgoing activities to be sent back to the messaging
      API.
    isRequired: true
  return:
    description: An array of ResourceResponse objects containing the IDs that Slack
      assigned to the sent messages.
- uid: botbuilder.adapters.slack.slack_adapter.SlackAdapter.update_activity
  name: update_activity
  summary: Standard BotBuilder adapter method to update a previous message with new
    content.
  signature: 'update_activity(context: botbuilder.core.turn_context.TurnContext, activity:
    botbuilder.schema._models_py3.Activity)'
  parameters:
  - name: context
    description: A TurnContext representing the current incoming message and environment.
    isRequired: true
  - name: activity
    description: 'The updated activity in the form ''{id: *id of activity to update*,
      ...}''.'
    isRequired: true
  return:
    description: A resource response with the Id of the updated activity.
