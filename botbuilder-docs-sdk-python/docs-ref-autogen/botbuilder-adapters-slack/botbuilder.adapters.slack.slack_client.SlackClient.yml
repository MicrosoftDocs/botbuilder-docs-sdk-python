### YamlMime:PythonClass
uid: botbuilder.adapters.slack.slack_client.SlackClient
name: SlackClient
fullName: botbuilder.adapters.slack.slack_client.SlackClient
module: botbuilder.adapters.slack.slack_client
inheritances:
- slack.web.client.WebClient
summary: Slack client that extends [https://github.com/slackapi/python-slackclient](https://github.com/slackapi/python-slackclient).
constructor:
  syntax: 'SlackClient(options: botbuilder.adapters.slack.slack_client_options.SlackClientOptions)'
methods:
- uid: botbuilder.adapters.slack.slack_client.SlackClient.channels_list_ex
  name: channels_list_ex
  signature: 'channels_list_ex(exclude_archived: bool = True)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.chat_post_ephemeral_ex
  name: chat_post_ephemeral_ex
  signature: 'chat_post_ephemeral_ex(channel: str, text: str, target_user: str, parse:
    Optional[str] = None, link_names: bool = False, attachments: Optional[List[str]]
    = None, as_user: bool = False)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.chat_post_message_ex
  name: chat_post_message_ex
  signature: 'chat_post_message_ex(channel: str, text: str, bot_name: Optional[str]
    = None, parse: Optional[str] = None, link_names: bool = False, blocks: Optional[List[str]]
    = None, attachments: Optional[List[str]] = None, unfurl_links: bool = False, icon_url:
    Optional[str] = None, icon_emoji: Optional[str] = None, as_user: bool = False)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.chat_update_ex
  name: chat_update_ex
  signature: 'chat_update_ex(timestamp: str, channel: str, text: str, bot_name: Optional[str]
    = None, parse: Optional[str] = None, link_names: bool = False, attachments: Optional[List[str]]
    = None, as_user: bool = False)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.files_info_ex
  name: files_info_ex
  signature: 'files_info_ex(file_id: str, page: Optional[int] = None, count: Optional[int]
    = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.files_list_ex
  name: files_list_ex
  signature: 'files_list_ex(user_id: Optional[str] = None, date_from: Optional[str]
    = None, date_to: Optional[str] = None, count: Optional[int] = None, page: Optional[int]
    = None, types: Optional[List[str]] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.files_upload_ex
  name: files_upload_ex
  signature: 'files_upload_ex(file: Optional[Union[str, io.IOBase]] = None, content:
    Optional[str] = None, channels: Optional[List[str]] = None, title: Optional[str]
    = None, initial_comment: Optional[str] = None, file_type: Optional[str] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.get_bot_user_identity
  name: get_bot_user_identity
  signature: 'get_bot_user_identity(activity: botbuilder.schema._models_py3.Activity)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.get_preferences
  name: get_preferences
  signature: get_preferences()
- uid: botbuilder.adapters.slack.slack_client.SlackClient.groups_close
  name: groups_close
  signature: 'groups_close(channel: str)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.groups_history_ex
  name: groups_history_ex
  signature: 'groups_history_ex(channel: str, latest: Optional[str] = None, oldest:
    Optional[str] = None, count: Optional[int] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.groups_list_ex
  name: groups_list_ex
  signature: 'groups_list_ex(exclude_archived: bool = True)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.im_history_ex
  name: im_history_ex
  signature: 'im_history_ex(channel: str, latest_timestamp: Optional[str] = None,
    oldest_timestamp: Optional[str] = None, count: Optional[int] = None, unreads:
    Optional[bool] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.is_logged_in
  name: is_logged_in
  signature: is_logged_in()
- uid: botbuilder.adapters.slack.slack_client.SlackClient.login_with_slack
  name: login_with_slack
  signature: login_with_slack()
- uid: botbuilder.adapters.slack.slack_client.SlackClient.post_message
  name: post_message
  signature: 'post_message(message: botbuilder.adapters.slack.slack_message.SlackMessage)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.search_all_ex
  name: search_all_ex
  signature: 'search_all_ex(query: str, sorting: Optional[str] = None, direction:
    Optional[str] = None, enable_highlights: bool = False, count: Optional[int] =
    None, page: Optional[int] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.search_files_ex
  name: search_files_ex
  signature: 'search_files_ex(query: str, sorting: Optional[str] = None, direction:
    Optional[str] = None, enable_highlights: bool = False, count: Optional[int] =
    None, page: Optional[int] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.search_messages_ex
  name: search_messages_ex
  signature: 'search_messages_ex(query: str, sorting: Optional[str] = None, direction:
    Optional[str] = None, enable_highlights: bool = False, count: Optional[int] =
    None, page: Optional[int] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.stars_list_ex
  name: stars_list_ex
  signature: 'stars_list_ex(user: Optional[str] = None, count: Optional[int] = None,
    page: Optional[int] = None)'
- uid: botbuilder.adapters.slack.slack_client.SlackClient.test_auth
  name: test_auth
  signature: test_auth()
- uid: botbuilder.adapters.slack.slack_client.SlackClient.users_counts
  name: users_counts
  signature: users_counts()
- uid: botbuilder.adapters.slack.slack_client.SlackClient.verify_signature
  name: verify_signature
  signature: 'verify_signature(req: aiohttp.web_request.Request, body: str)'
