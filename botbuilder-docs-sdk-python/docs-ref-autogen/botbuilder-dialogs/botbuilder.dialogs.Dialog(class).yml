### YamlMime:PythonClass
uid: botbuilder.dialogs.Dialog
name: Dialog
fullName: botbuilder.dialogs.Dialog
module: botbuilder.dialogs
inheritances:
- abc.ABC
constructor:
  syntax: 'Dialog(dialog_id: str)'
methods:
- uid: botbuilder.dialogs.Dialog.begin_dialog
  name: begin_dialog
  summary: 'Method called when a new dialog has been pushed onto the stack and is
    being activated.

    :param dialog_context: The dialog context for the current turn of conversation.

    :param options: (Optional) additional argument(s) to pass to the dialog being
    started.'
- uid: botbuilder.dialogs.Dialog.continue_dialog
  name: continue_dialog
  summary: 'Method called when an instance of the dialog is the "current" dialog and
    the

    user replies with a new activity. The dialog will generally continue to receive
    the user''s

    replies until it calls either *end_dialog()* or *begin_dialog()*.

    If this method is NOT implemented then the dialog will automatically be ended
    when the user replies.

    :param dialog_context: The dialog context for the current turn of conversation.

    :return:'
- uid: botbuilder.dialogs.Dialog.end_dialog
  name: end_dialog
  signature: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)'
  parameters:
  - name: context
    isRequired: true
  - name: instance
    isRequired: true
  - name: reason
    isRequired: true
- uid: botbuilder.dialogs.Dialog.reprompt_dialog
  name: reprompt_dialog
  signature: 'reprompt_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance)'
  parameters:
  - name: context
    isRequired: true
  - name: instance
    isRequired: true
- uid: botbuilder.dialogs.Dialog.resume_dialog
  name: resume_dialog
  summary: 'Method called when an instance of the dialog is being returned to from
    another

    dialog that was started by the current instance using *begin_dialog()*.

    If this method is NOT implemented then the dialog will be automatically ended
    with a call

    to *end_dialog()*. Any result passed from the called dialog will be passed

    to the current dialog''s parent.

    :param dialog_context: The dialog context for the current turn of conversation.

    :param reason: Reason why the dialog resumed.

    :param result: (Optional) value returned from the dialog that was called. The
    type of the value returned is

    dependent on the dialog that was called.

    :return:'
attributes:
- uid: botbuilder.dialogs.Dialog.telemetry_client
  name: telemetry_client
  summary: Gets the telemetry client for logging events.
- uid: botbuilder.dialogs.Dialog.end_of_turn
  name: end_of_turn
  signature: end_of_turn = <botbuilder.dialogs.dialog_turn_result.DialogTurnResult
    object>
