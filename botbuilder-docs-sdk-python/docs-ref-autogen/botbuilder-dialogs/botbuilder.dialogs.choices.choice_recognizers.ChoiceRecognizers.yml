### YamlMime:PythonClass
uid: botbuilder.dialogs.choices.choice_recognizers.ChoiceRecognizers
name: ChoiceRecognizers
fullName: botbuilder.dialogs.choices.choice_recognizers.ChoiceRecognizers
module: botbuilder.dialogs.choices.choice_recognizers
inheritances:
- builtins.object
summary: Contains methods for matching user input against a list of choices.
constructor:
  syntax: ChoiceRecognizers()
methods:
- uid: botbuilder.dialogs.choices.choice_recognizers.ChoiceRecognizers.recognize_choices
  name: recognize_choices
  summary: "Matches user input against a list of choices.\n\nThis is layered above\
    \ the *Find.find_choices()* function, and adds logic to let the user specify\n\
    their choice by index (they can say \"one\" to pick *choice[0]*) or ordinal position\n\
    \n   (they can say \"the second one\" to pick *choice[1]*.)\n\nThe user's utterance\
    \ is recognized in the following order:\n\n* By name using *find_choices()* \n\
    \n* By 1's based ordinal position. \n\n* By 1's based index position."
  signature: 'static recognize_choices(utterance: str, choices: List[str | Choice],
    options: FindChoicesOptions = None) -> List[ModelResult]'
  parameters:
  - name: utterance
    isRequired: true
    types:
    - <xref:<xref:The input.>>
  - name: choices
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.choices.choice_recognizers.The list> of <xref:choices.>
  - name: options
    defaultValue: None
    types:
    - '(<xref:Optional>)<xref: Options> to <xref:control the recognition strategy.>'
  return:
    types:
    - <xref:A> <xref:list> <xref:of> <xref:found> <xref:botbuilder.dialogs.choices>,
      <xref:sorted> <xref:by> <xref:most> <xref:relevant> <xref:first.>
