### YamlMime:PythonClass
uid: botbuilder.dialogs.ComponentDialog
name: ComponentDialog
fullName: botbuilder.dialogs.ComponentDialog
module: botbuilder.dialogs
inheritances:
- botbuilder.dialogs.dialog.Dialog
summary: A <xref:botbuilder.dialogs.Dialog> that is composed of other dialogs
constructor:
  syntax: 'ComponentDialog(dialog_id: str)'
variables:
- name: state
  types:
  - persisted_dialog
methods:
- uid: botbuilder.dialogs.ComponentDialog.add_dialog
  name: add_dialog
  summary: Adds a <xref:botbuilder.dialogs.Dialog> to the component dialog and returns
    the updated component.
  signature: 'add_dialog(dialog: botbuilder.dialogs.dialog.Dialog)'
  parameters:
  - name: dialog
    description: The dialog to add.
    isRequired: true
  return:
    description: The updated <xref:botbuilder.dialogs.ComponentDialog>.
    types:
    - <xref:botbuilder.dialogs.ComponentDialog>
- uid: botbuilder.dialogs.ComponentDialog.begin_dialog
  name: begin_dialog
  summary: "Called when the dialog is started and pushed onto the parent\u2019s dialog\
    \ stack.\n\nIf the task is successful, the result indicates whether the dialog\
    \ is still\nactive after the turn has been processed by the dialog."
  signature: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: object = None)'
  parameters:
  - name: dialog_context
    description: The <xref:botbuilder.dialogs.DialogContext> for the current turn
      of the conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogContext>
  - name: options
    description: Optional, initial information to pass to the dialog.
    isRequired: true
    types:
    - object
  return:
    description: Signals the end of the turn
    types:
    - <xref:botbuilder.dialogs.Dialog.end_of_turn>
- uid: botbuilder.dialogs.ComponentDialog.continue_dialog
  name: continue_dialog
  summary: 'Called when the dialog is continued, where it is the active dialog and
    the

    user replies with a new activity.'
  signature: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)'
  parameters:
  - name: dialog_context
    description: The parent dialog context for the current turn of the conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogContext>
  return:
    description: Signals the end of the turn
    types:
    - <xref:botbuilder.dialogs.Dialog.end_of_turn>
  remarks: "If the task is successful, the result indicates whether the dialog is\
    \ still\nactive after the turn has been processed by the dialog. The result may\
    \ also\ncontain a return value.\n\nIf this method is *not* overriden the component\
    \ dialog calls the\n<xref:botbuilder.dialogs.DialogContext.continue_dialog> method\
    \ on it\u2019s inner dialog\ncontext. If the inner dialog stack is empty, the\
    \ component dialog ends,\nand if a <xref:botbuilder.dialogs.DialogTurnResult.result>\
    \ is available, the component dialog\nuses that as it\u2019s return value.\n"
- uid: botbuilder.dialogs.ComponentDialog.end_component
  name: end_component
  summary: "Ends the component dialog in its parent\u2019s context."
  signature: 'end_component(outer_dc: botbuilder.dialogs.dialog_context.DialogContext,
    result: object)'
  parameters:
  - name: outer_dc
    description: The parent dialog context for the current turn of conversation.
    isRequired: true
    types:
    - class:botbuilder.dialogs.DialogContext
  - name: result
    description: Optional, value to return from the dialog component to the parent
      context.
    isRequired: true
    types:
    - object
  return:
    description: Value to return.
    types:
    - <xref:botbuilder.dialogs.DialogTurnResult.result>
  remarks: 'If the task is successful, the result indicates that the dialog ended
    after the

    turn was processed by the dialog.

    '
- uid: botbuilder.dialogs.ComponentDialog.end_dialog
  name: end_dialog
  summary: Called when the dialog is ending.
  signature: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)'
  parameters:
  - name: context
    description: The context object for this turn.
    isRequired: true
    types:
    - '`botbuilder.core.TurnContext`'
  - name: instance
    description: State information associated with the instance of this component
      dialog.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogInstance>
  - name: reason
    description: Reason why the dialog ended.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogReason>
- uid: botbuilder.dialogs.ComponentDialog.find_dialog
  name: find_dialog
  summary: Finds a dialog by ID.
  signature: 'find_dialog(dialog_id: str)'
  parameters:
  - name: dialog_id
    description: The dialog to add.
    isRequired: true
  return:
    description: The dialog; or None if there is not a match for the ID.
    types:
    - <xref:botbuilder.dialogs.Dialog>
- uid: botbuilder.dialogs.ComponentDialog.on_begin_dialog
  name: on_begin_dialog
  summary: "Called when the dialog is started and pushed onto the parent\u2019s dialog\
    \ stack."
  signature: 'on_begin_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext,
    options: object)'
  parameters:
  - name: inner_dc
    description: The inner dialog context for the current turn of conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogContext>
  - name: options
    description: Optional, initial information to pass to the dialog.
    isRequired: true
    types:
    - object
  remarks: "If the task is successful, the result indicates whether the dialog is\
    \ still\nactive after the turn has been processed by the dialog.\n\nBy default,\
    \ this calls the <xref:botbuilder.dialogs.Dialog.begin_dialog>\nmethod of the\
    \ component dialog\u2019s initial dialog.\n\nOverride this method in a derived\
    \ class to implement interrupt logic.\n"
- uid: botbuilder.dialogs.ComponentDialog.on_continue_dialog
  name: on_continue_dialog
  summary: Called when the dialog is continued, where it is the active dialog and
    the user replies with a new activity.
  signature: 'on_continue_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext)'
  parameters:
  - name: inner_dc
    description: The inner dialog context for the current turn of conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogContext>
- uid: botbuilder.dialogs.ComponentDialog.on_end_dialog
  name: on_end_dialog
  summary: "Ends the component dialog in its parent\u2019s context."
  signature: 'on_end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)'
  parameters:
  - name: turn_context
    description: The `botbuilder.core.TurnContext` for the current turn of the conversation.
    isRequired: true
    types:
    - '`botbuilder.core.TurnContext`'
  - name: instance
    description: State information associated with the inner dialog stack of this
      component dialog.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogInstance>
  - name: reason
    description: Reason why the dialog ended.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogReason>
- uid: botbuilder.dialogs.ComponentDialog.on_reprompt_dialog
  name: on_reprompt_dialog
  signature: 'on_reprompt_dialog(turn_context: botbuilder.core.turn_context.TurnContext,
    instance: botbuilder.dialogs.dialog_instance.DialogInstance)'
  parameters:
  - name: turn_context
    description: The `botbuilder.core.TurnContext` for the current turn of the conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogInstance>
  - name: instance
    description: State information associated with the inner dialog stack of this
      component dialog.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogInstance>
- uid: botbuilder.dialogs.ComponentDialog.reprompt_dialog
  name: reprompt_dialog
  summary: Called when the dialog should re-prompt the user for input.
  signature: 'reprompt_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance)'
  parameters:
  - name: context
    description: The context object for this turn.
    isRequired: true
    types:
    - '`botbuilder.core.TurnContext`'
  - name: instance
    description: State information for this dialog.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogInstance>
- uid: botbuilder.dialogs.ComponentDialog.resume_dialog
  name: resume_dialog
  summary: "Called when a child dialog on the parent\u2019s dialog stack completed\
    \ this turn, returning\ncontrol to this dialog component."
  signature: 'resume_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object = None)'
  parameters:
  - name: dialog_context
    description: The dialog context for the current turn of the conversation.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogContext>
  - name: reason
    description: Reason why the dialog resumed.
    isRequired: true
    types:
    - <xref:botbuilder.dialogs.DialogReason>
  - name: result
    description: Optional, value returned from the dialog that was called.
    isRequired: true
    types:
    - object
  return:
    description: Signals the end of the turn
    types:
    - <xref:botbuilder.dialogs.Dialog.end_of_turn>
  remarks: 'Containers are typically leaf nodes on the stack but the dev is free to
    push other dialogs

    on top of the stack which will result in the container receiving an unexpected
    call to

    <xref:botbuilder.dialogs.ComponentDialog.resume_dialog> when the pushed on dialog
    ends.

    To avoid the container prematurely ending we need to implement this method and
    simply

    ask our inner dialog stack to re-prompt.

    '
attributes:
- uid: botbuilder.dialogs.ComponentDialog.persisted_dialog_state
  name: persisted_dialog_state
  signature: persisted_dialog_state = 'dialogs'
