### YamlMime:PythonClass
uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog
name: WaterfallDialog
fullName: botbuilder.dialogs.waterfall_dialog.WaterfallDialog
module: botbuilder.dialogs.waterfall_dialog
inheritances:
- botbuilder.dialogs.dialog.Dialog
constructor:
  syntax: 'WaterfallDialog(dialog_id: str, steps: [typing.Coroutine] = None)'
methods:
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.add_step
  name: add_step
  summary: 'Adds a new step to the waterfall.

    :param step: Step to add

    :return: Waterfall dialog for fluent calls to *add_step()*.'
  signature: add_step(step)
  parameters:
  - name: step
    isRequired: true
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.begin_dialog
  name: begin_dialog
  summary: 'Method called when a new dialog has been pushed onto the stack and is
    being activated.

    :param dialog_context: The dialog context for the current turn of conversation.

    :param options: (Optional) additional argument(s) to pass to the dialog being
    started.'
  signature: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: object = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parameters:
  - name: dialog_context
    isRequired: true
  - name: options
    defaultValue: None
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.continue_dialog
  name: continue_dialog
  summary: 'Method called when an instance of the dialog is the "current" dialog and
    the

    user replies with a new activity. The dialog will generally continue to receive
    the user''s

    replies until it calls either *end_dialog()* or *begin_dialog()*.

    If this method is NOT implemented then the dialog will automatically be ended
    when the user replies.

    :param dialog_context: The dialog context for the current turn of conversation.

    :return:'
  signature: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext
    = None, reason: botbuilder.dialogs.dialog_reason.DialogReason = None, result:
    object = NotImplementedError()) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parameters:
  - name: dialog_context
    defaultValue: None
  - name: reason
    defaultValue: None
  - name: result
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.end_dialog
  name: end_dialog
  signature: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)
    -> None'
  parameters:
  - name: context
    isRequired: true
  - name: instance
    isRequired: true
  - name: reason
    isRequired: true
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.get_step_name
  name: get_step_name
  summary: Give the waterfall step a unique name
  signature: 'get_step_name(index: int) -> str'
  parameters:
  - name: index
    isRequired: true
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.on_step
  name: on_step
  signature: 'on_step(step_context: botbuilder.dialogs.waterfall_step_context.WaterfallStepContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parameters:
  - name: step_context
    isRequired: true
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.resume_dialog
  name: resume_dialog
  summary: 'Method called when an instance of the dialog is being returned to from
    another

    dialog that was started by the current instance using *begin_dialog()*.

    If this method is NOT implemented then the dialog will be automatically ended
    with a call

    to *end_dialog()*. Any result passed from the called dialog will be passed

    to the current dialog''s parent.

    :param dialog_context: The dialog context for the current turn of conversation.

    :param reason: Reason why the dialog resumed.

    :param result: (Optional) value returned from the dialog that was called. The
    type of the value returned is

    dependent on the dialog that was called.

    :return:'
  signature: 'resume_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object)'
  parameters:
  - name: dialog_context
    isRequired: true
  - name: reason
    isRequired: true
  - name: result
    isRequired: true
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.run_step
  name: run_step
  signature: 'run_step(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    index: int, reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parameters:
  - name: dialog_context
    isRequired: true
  - name: index
    isRequired: true
  - name: reason
    isRequired: true
  - name: result
    isRequired: true
attributes:
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.PersistedInstanceId
  name: PersistedInstanceId
  signature: PersistedInstanceId = 'instanceId'
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.PersistedOptions
  name: PersistedOptions
  signature: PersistedOptions = 'options'
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.PersistedValues
  name: PersistedValues
  signature: PersistedValues = 'values'
- uid: botbuilder.dialogs.waterfall_dialog.WaterfallDialog.StepIndex
  name: StepIndex
  signature: StepIndex = 'stepIndex'
