### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.dialogs.choices.channel.Channel.get_channel_id
  - botbuilder.dialogs.choices.channel.Channel.has_message_feed
  - botbuilder.dialogs.choices.channel.Channel.max_action_title_length
  - botbuilder.dialogs.choices.channel.Channel.supports_card_actions
  - botbuilder.dialogs.choices.channel.Channel.supports_suggested_actions
  class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: Channel
  source:
    id: Channel
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 8
  summary: Methods for determining channel-specific functionality.
  syntax: {}
  type: class
  uid: botbuilder.dialogs.choices.channel.Channel
- class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel.get_channel_id
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: 'get_channel_id(turn_context: botbuilder.core.turn_context.TurnContext) ->
    str'
  source:
    id: get_channel_id
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 104
  summary: Get the Channel Id from the current Activity on the Turn Context.
  syntax:
    content: 'get_channel_id(turn_context: botbuilder.core.turn_context.TurnContext)
      -> str'
    parameters:
    - description: The Turn Context to retrieve the Activity's Channel Id from.
      id: turn_context
      type:
      - TurnContext
    return:
      description: The Channel Id from the Turn Context's Activity.
      type:
      - str
  type: method
  uid: botbuilder.dialogs.choices.channel.Channel.get_channel_id
- class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel.has_message_feed
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: 'has_message_feed(channel_id: str) -> bool'
  source:
    id: has_message_feed
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 76
  summary: Determine if a Channel has a Message Feed.
  syntax:
    content: 'has_message_feed(channel_id: str) -> bool'
    parameters:
    - description: The Channel to check for Message Feed.
      id: channel_id
      type:
      - str
    return:
      description: True if the Channel has a Message Feed, False if it does not.
      type:
      - bool
  type: method
  uid: botbuilder.dialogs.choices.channel.Channel.has_message_feed
- class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel.max_action_title_length
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: 'max_action_title_length(channel_id: str) -> int'
  source:
    id: max_action_title_length
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 89
  summary: Maximum length allowed for Action Titles.
  syntax:
    content: 'max_action_title_length(channel_id: str) -> int'
    parameters:
    - description: The Channel to determine Maximum Action Title Length.
      id: channel_id
      type:
      - str
    return:
      description: The total number of characters allowed for an Action Title on a
        specific Channel.
      type:
      - int
  type: method
  uid: botbuilder.dialogs.choices.channel.Channel.max_action_title_length
- class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel.supports_card_actions
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: 'supports_card_actions(channel_id: str, button_cnt: int = 100) -> bool'
  source:
    id: supports_card_actions
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 46
  summary: Determine if a number of Card Actions are supported by a Channel.
  syntax:
    content: 'supports_card_actions(channel_id: str, button_cnt: int = 100) -> bool'
    parameters:
    - description: The Channel to check if the Card Actions are supported in.
      id: channel_id
      type:
      - str
    - description: Defaults to 100. The number of Card Actions to check for the Channel.
      id: button_cnt
      type:
      - int, optional
    return:
      description: "True if the Channel supports the button_cnt total Card Actions,\
        \ False if the Channel does not support\n   that number of Card Actions."
      type:
      - bool
  type: method
  uid: botbuilder.dialogs.choices.channel.Channel.supports_card_actions
- class: botbuilder.dialogs.choices.channel.Channel
  fullName: botbuilder.dialogs.choices.channel.Channel.supports_suggested_actions
  langs:
  - python
  module: botbuilder.dialogs.choices.channel
  name: 'supports_suggested_actions(channel_id: str, button_cnt: int = 100) -> bool'
  source:
    id: supports_suggested_actions
    path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
    remote:
      branch: master
      path: libraries/botbuilder-dialogs\botbuilder\dialogs\choices\channel.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 13
  summary: Determine if a number of Suggested Actions are supported by a Channel.
  syntax:
    content: 'supports_suggested_actions(channel_id: str, button_cnt: int = 100) ->
      bool'
    parameters:
    - description: The Channel to check the if Suggested Actions are supported in.
      id: channel_id
      type:
      - str
    - description: Defaults to 100. The number of Suggested Actions to check for the
        Channel.
      id: button_cnt
      type:
      - int, optional
    return:
      description: "True if the Channel supports the button_cnt total Suggested Actions,\
        \ False if the Channel does not\n   support that number of Suggested Actions."
      type:
      - bool
  type: method
  uid: botbuilder.dialogs.choices.channel.Channel.supports_suggested_actions
references:
- fullName: botbuilder.dialogs.choices.channel.Channel.get_channel_id
  isExternal: false
  name: 'get_channel_id(turn_context: botbuilder.core.turn_context.TurnContext) ->
    str'
  parent: botbuilder.dialogs.choices.channel.Channel
  uid: botbuilder.dialogs.choices.channel.Channel.get_channel_id
- fullName: botbuilder.dialogs.choices.channel.Channel.has_message_feed
  isExternal: false
  name: 'has_message_feed(channel_id: str) -> bool'
  parent: botbuilder.dialogs.choices.channel.Channel
  uid: botbuilder.dialogs.choices.channel.Channel.has_message_feed
- fullName: botbuilder.dialogs.choices.channel.Channel.max_action_title_length
  isExternal: false
  name: 'max_action_title_length(channel_id: str) -> int'
  parent: botbuilder.dialogs.choices.channel.Channel
  uid: botbuilder.dialogs.choices.channel.Channel.max_action_title_length
- fullName: botbuilder.dialogs.choices.channel.Channel.supports_card_actions
  isExternal: false
  name: 'supports_card_actions(channel_id: str, button_cnt: int = 100) -> bool'
  parent: botbuilder.dialogs.choices.channel.Channel
  uid: botbuilder.dialogs.choices.channel.Channel.supports_card_actions
- fullName: botbuilder.dialogs.choices.channel.Channel.supports_suggested_actions
  isExternal: false
  name: 'supports_suggested_actions(channel_id: str, button_cnt: int = 100) -> bool'
  parent: botbuilder.dialogs.choices.channel.Channel
  uid: botbuilder.dialogs.choices.channel.Channel.supports_suggested_actions
- fullName: int, optional
  name: int, optional
  spec.python:
  - fullName: int
    name: int
    uid: int
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: int, optional
