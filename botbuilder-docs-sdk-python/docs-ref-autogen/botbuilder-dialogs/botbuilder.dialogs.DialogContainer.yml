### YamlMime:PythonClass
uid: botbuilder.dialogs.DialogContainer
name: DialogContainer
fullName: botbuilder.dialogs.DialogContainer
module: botbuilder.dialogs
inheritances:
- botbuilder.dialogs.dialog.Dialog
- abc.ABC
constructor:
  syntax: 'DialogContainer(dialog_id: str = None) -> None'
methods:
- uid: botbuilder.dialogs.DialogContainer.check_for_version_change_async
  name: check_for_version_change_async
  summary: 'Checks to see if a containers child dialogs have changed since the current
    dialog instance

    was started.


    This should be called at the start of *beginDialog()*, *continueDialog()*, and
    *resumeDialog()*.'
  signature: 'check_for_version_change_async(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> None'
  parameters:
  - name: dialog_context
    description: dialog context.
    isRequired: true
  return:
    description: task.
- uid: botbuilder.dialogs.DialogContainer.create_child_context
  name: create_child_context
  signature: 'create_child_context(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_context.DialogContext'
  parameters:
  - name: dialog_context
    isRequired: true
- uid: botbuilder.dialogs.DialogContainer.find_dialog
  name: find_dialog
  signature: 'find_dialog(dialog_id: str) -> botbuilder.dialogs.dialog.Dialog'
  parameters:
  - name: dialog_id
    isRequired: true
- uid: botbuilder.dialogs.DialogContainer.get_internal_version
  name: get_internal_version
  summary: 'GetInternalVersion - Returns internal version identifier for this container.

    DialogContainers detect changes of all sub-components in the container and map
    that to an DialogChanged event.

    Because they do this, DialogContainers "hide" the internal changes and just have
    the .id. This isolates changes

    to the container level unless a container doesn''t handle it.  To support this
    DialogContainers define a

    protected virtual method GetInternalVersion() which computes if this dialog or
    child dialogs have changed

    which is then examined via calls to check_for_version_change_async().

    :return: version which represents the change of the internals of this container.'
  signature: get_internal_version() -> str
- uid: botbuilder.dialogs.DialogContainer.on_dialog_event
  name: on_dialog_event
  summary: "Called when an event has been raised, using *DialogContext.emitEvent()*,\
    \ by either the current dialog or a\n   dialog that the current dialog started."
  signature: 'on_dialog_event(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    dialog_event: botbuilder.dialogs.dialog_event.DialogEvent) -> bool'
  parameters:
  - name: dialog_context
    description: The dialog context for the current turn of conversation.
    isRequired: true
  - name: dialog_event
    description: The event being raised.
    isRequired: true
  return:
    description: True if the event is handled by the current dialog and bubbling should
      stop.
attributes:
- uid: botbuilder.dialogs.DialogContainer.telemetry_client
  name: telemetry_client
  summary: Gets the telemetry client for logging events.
