### YamlMime:PythonClass
uid: botbuilder.dialogs.choices.ChoiceRecognizers
name: ChoiceRecognizers
fullName: botbuilder.dialogs.choices.ChoiceRecognizers
module: botbuilder.dialogs.choices
inheritances:
- builtins.object
summary: Contains methods for matching user input against a list of choices.
constructor:
  syntax: ChoiceRecognizers()
methods:
- uid: botbuilder.dialogs.choices.ChoiceRecognizers.recognize_choices
  name: recognize_choices
  summary: "Matches user input against a list of choices.\nThis is layered above the\
    \ *Find.find_choices()* function, and adds logic to let the user specify\ntheir\
    \ choice by index (they can say \"one\" to pick *choice[0]*) or ordinal position\n\
    (they can say \"the second one\" to pick *choice[1]*.)\nThe user's utterance is\
    \ recognized in the following order:\n* By name using *find_choices()* \n\n* By\
    \ 1's based ordinal position. \n\n* By 1's based index position.\nutterance: The\
    \ input.\nchoices: The list of choices.\noptions: (Optional) Options to control\
    \ the recognition strategy.\nA list of found choices, sorted by most relevant\
    \ first."
  signature: 'static recognize_choices(utterance: str, choices: List[Union[str, botbuilder.dialogs.choices.choice.Choice]],
    options: Optional[botbuilder.dialogs.choices.find_choices_options.FindChoicesOptions]
    = None) -> List[botbuilder.dialogs.choices.model_result.ModelResult]'
  parameters:
  - name: utterance
    isRequired: true
  - name: choices
    isRequired: true
  - name: options
    defaultValue: None
