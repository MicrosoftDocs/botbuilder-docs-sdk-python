### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.dialogs.component_dialog.ComponentDialog.add_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.begin_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.continue_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.end_component
  - botbuilder.dialogs.component_dialog.ComponentDialog.end_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.find_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.on_begin_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.on_continue_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.on_end_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.on_reprompt_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.reprompt_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog
  - botbuilder.dialogs.component_dialog.ComponentDialog.persisted_dialog_state
  class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: botbuilder.dialogs.dialog.Dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: ComponentDialog
  source:
    id: ComponentDialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 16
  summary: A <xref:botbuilder.dialogs.Dialog> that is composed of other dialogs
  syntax:
    content: 'ComponentDialog(dialog_id: str)'
    variables:
    - description: ''
      id: state
      type:
      - persisted_dialog
  type: class
  uid: botbuilder.dialogs.component_dialog.ComponentDialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.add_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'add_dialog(dialog: botbuilder.dialogs.dialog.Dialog) -> object'
  namewithoutparameters: add_dialog
  source:
    id: add_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 178
  summary: Adds a <xref:botbuilder.dialogs.component_dialog.Dialog> to the component
    dialog and returns the updated component.
  syntax:
    content: 'add_dialog(dialog: botbuilder.dialogs.dialog.Dialog) -> object'
    parameters:
    - description: The dialog to add.
      id: dialog
      isRequired: true
    return:
      description: The updated <xref:botbuilder.dialogs.component_dialog.ComponentDialog>.
      type:
      - <xref:botbuilder.dialogs.component_dialog.ComponentDialog>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.add_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.begin_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: object = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: begin_dialog
  source:
    id: begin_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 43
  summary: 'Called when the dialog is started and pushed onto the parent''s dialog
    stack.


    If the task is successful, the result indicates whether the dialog is still

    active after the turn has been processed by the dialog.'
  syntax:
    content: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
      options: object = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The <xref:botbuilder.dialogs.DialogContext> for the current turn
        of the conversation.
      id: dialog_context
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogContext>
    - description: Optional, initial information to pass to the dialog.
      id: options
      isRequired: true
      type:
      - object
    return:
      description: Signals the end of the turn
      type:
      - <xref:botbuilder.dialogs.Dialog.end_of_turn>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.begin_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.continue_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: continue_dialog
  remarks: 'If the task is successful, the result indicates whether the dialog is
    still

    active after the turn has been processed by the dialog. The result may also

    contain a return value.


    If this method is *not* overriden the component dialog calls the

    <xref:botbuilder.dialogs.DialogContext.continue_dialog> method on it''s inner
    dialog

    context. If the inner dialog stack is empty, the component dialog ends,

    and if a <xref:botbuilder.dialogs.DialogTurnResult.result> is available, the component
    dialog

    uses that as it''s return value.

    '
  source:
    id: continue_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 77
  summary: 'Called when the dialog is continued, where it is the active dialog and
    the

    user replies with a new activity.'
  syntax:
    content: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
      -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The parent dialog context for the current turn of the conversation.
      id: dialog_context
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogContext>
    return:
      description: Signals the end of the turn
      type:
      - <xref:botbuilder.dialogs.Dialog.end_of_turn>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.continue_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.end_component
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'end_component(outer_dc: botbuilder.dialogs.dialog_context.DialogContext,
    result: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: end_component
  remarks: 'If the task is successful, the result indicates that the dialog ended
    after the

    turn was processed by the dialog.

    '
  source:
    id: end_component
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 258
  summary: Ends the component dialog in its parent's context.
  syntax:
    content: 'end_component(outer_dc: botbuilder.dialogs.dialog_context.DialogContext,
      result: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The parent dialog context for the current turn of conversation.
      id: outer_dc
      isRequired: true
      type:
      - class:botbuilder.dialogs.DialogContext
    - description: Optional, value to return from the dialog component to the parent
        context.
      id: result
      isRequired: true
      type:
      - object
    return:
      description: Value to return.
      type:
      - <xref:botbuilder.dialogs.DialogTurnResult.result>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.end_component
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.end_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance: botbuilder.dialogs.dialog_instance.DialogInstance,
    reason: botbuilder.dialogs.dialog_reason.DialogReason) -> None'
  namewithoutparameters: end_dialog
  source:
    id: end_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 158
  summary: Called when the dialog is ending.
  syntax:
    content: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
      botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)
      -> None'
    parameters:
    - description: The context object for this turn.
      id: context
      isRequired: true
      type:
      - botbuilder.core.TurnContext
    - description: State information associated with the instance of this component
        dialog.
      id: instance
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogInstance>
    - description: Reason why the dialog ended.
      id: reason
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogReason>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.end_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.find_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'find_dialog(dialog_id: str) -> botbuilder.dialogs.dialog.Dialog'
  namewithoutparameters: find_dialog
  source:
    id: find_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 191
  summary: Finds a dialog by ID.
  syntax:
    content: 'find_dialog(dialog_id: str) -> botbuilder.dialogs.dialog.Dialog'
    parameters:
    - description: The dialog to add.
      id: dialog_id
      isRequired: true
    return:
      description: The dialog; or None if there is not a match for the ID.
      type:
      - <xref:botbuilder.dialogs.Dialog>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.find_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_begin_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'on_begin_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext,
    options: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: on_begin_dialog
  remarks: 'If the task is successful, the result indicates whether the dialog is
    still

    active after the turn has been processed by the dialog.


    By default, this calls the <xref:botbuilder.dialogs.Dialog.begin_dialog>

    method of the component dialog''s initial dialog.


    Override this method in a derived class to implement interrupt logic.

    '
  source:
    id: on_begin_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 201
  summary: Called when the dialog is started and pushed onto the parent's dialog stack.
  syntax:
    content: 'on_begin_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext,
      options: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The inner dialog context for the current turn of conversation.
      id: inner_dc
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogContext>
    - description: Optional, initial information to pass to the dialog.
      id: options
      isRequired: true
      type:
      - object
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_begin_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_continue_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'on_continue_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: on_continue_dialog
  source:
    id: on_continue_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 223
  summary: Called when the dialog is continued, where it is the active dialog and
    the user replies with a new activity.
  syntax:
    content: 'on_continue_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext)
      -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The inner dialog context for the current turn of conversation.
      id: inner_dc
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogContext>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_continue_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_end_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'on_end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)
    -> None'
  namewithoutparameters: on_end_dialog
  source:
    id: on_end_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 232
  summary: Ends the component dialog in its parent's context.
  syntax:
    content: 'on_end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
      botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)
      -> None'
    parameters:
    - description: The <xref:botbuilder.core.TurnContext> for the current turn of
        the conversation.
      id: turn_context
      isRequired: true
      type:
      - botbuilder.core.TurnContext
    - description: State information associated with the inner dialog stack of this
        component dialog.
      id: instance
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogInstance>
    - description: Reason why the dialog ended.
      id: reason
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogReason>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_end_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_reprompt_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'on_reprompt_dialog(turn_context: botbuilder.core.turn_context.TurnContext,
    instance: botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
  namewithoutparameters: on_reprompt_dialog
  source:
    id: on_reprompt_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 247
  syntax:
    content: 'on_reprompt_dialog(turn_context: botbuilder.core.turn_context.TurnContext,
      instance: botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
    parameters:
    - description: The <xref:botbuilder.core.TurnContext> for the current turn of
        the conversation.
      id: turn_context
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogInstance>
    - description: State information associated with the inner dialog stack of this
        component dialog.
      id: instance
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogInstance>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_reprompt_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.reprompt_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'reprompt_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
  namewithoutparameters: reprompt_dialog
  source:
    id: reprompt_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 139
  summary: Called when the dialog should re-prompt the user for input.
  syntax:
    content: 'reprompt_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
      botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
    parameters:
    - description: The context object for this turn.
      id: context
      isRequired: true
      type:
      - botbuilder.core.TurnContext
    - description: State information for this dialog.
      id: instance
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogInstance>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.reprompt_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: 'resume_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object = None)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: resume_dialog
  remarks: 'Containers are typically leaf nodes on the stack but the dev is free to
    push other dialogs

    on top of the stack which will result in the container receiving an unexpected
    call to

    <xref:botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog> when
    the pushed on dialog ends.

    To avoid the container prematurely ending we need to implement this method and
    simply

    ask our inner dialog stack to re-prompt.

    '
  source:
    id: resume_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\component_dialog.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 112
  summary: 'Called when a child dialog on the parent''s dialog stack completed this
    turn, returning

    control to this dialog component.'
  syntax:
    content: 'resume_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
      reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object = None)
      -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The dialog context for the current turn of the conversation.
      id: dialog_context
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogContext>
    - description: Reason why the dialog resumed.
      id: reason
      isRequired: true
      type:
      - <xref:botbuilder.dialogs.DialogReason>
    - description: Optional, value returned from the dialog that was called.
      id: result
      isRequired: true
      type:
      - object
    return:
      description: Signals the end of the turn
      type:
      - <xref:botbuilder.dialogs.Dialog.end_of_turn>
  type: method
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog
- class: botbuilder.dialogs.component_dialog.ComponentDialog
  fullName: botbuilder.dialogs.component_dialog.ComponentDialog.persisted_dialog_state
  langs:
  - python
  module: botbuilder.dialogs.component_dialog
  name: persisted_dialog_state
  syntax:
    content: persisted_dialog_state = 'dialogs'
  type: attribute
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.persisted_dialog_state
references:
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.add_dialog
  isExternal: false
  name: 'add_dialog(dialog: botbuilder.dialogs.dialog.Dialog) -> object'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.add_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.begin_dialog
  isExternal: false
  name: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: object = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.begin_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.continue_dialog
  isExternal: false
  name: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.continue_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.end_component
  isExternal: false
  name: 'end_component(outer_dc: botbuilder.dialogs.dialog_context.DialogContext,
    result: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.end_component
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.end_dialog
  isExternal: false
  name: 'end_dialog(context: botbuilder.core.turn_context.TurnContext, instance: botbuilder.dialogs.dialog_instance.DialogInstance,
    reason: botbuilder.dialogs.dialog_reason.DialogReason) -> None'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.end_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.find_dialog
  isExternal: false
  name: 'find_dialog(dialog_id: str) -> botbuilder.dialogs.dialog.Dialog'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.find_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_begin_dialog
  isExternal: false
  name: 'on_begin_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext,
    options: object) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_begin_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_continue_dialog
  isExternal: false
  name: 'on_continue_dialog(inner_dc: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_continue_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_end_dialog
  isExternal: false
  name: 'on_end_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance, reason: botbuilder.dialogs.dialog_reason.DialogReason)
    -> None'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_end_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.on_reprompt_dialog
  isExternal: false
  name: 'on_reprompt_dialog(turn_context: botbuilder.core.turn_context.TurnContext,
    instance: botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.on_reprompt_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.reprompt_dialog
  isExternal: false
  name: 'reprompt_dialog(context: botbuilder.core.turn_context.TurnContext, instance:
    botbuilder.dialogs.dialog_instance.DialogInstance) -> None'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.reprompt_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog
  isExternal: false
  name: 'resume_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    reason: botbuilder.dialogs.dialog_reason.DialogReason, result: object = None)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.resume_dialog
- fullName: botbuilder.dialogs.component_dialog.ComponentDialog.persisted_dialog_state
  isExternal: false
  name: persisted_dialog_state
  parent: botbuilder.dialogs.component_dialog.ComponentDialog
  uid: botbuilder.dialogs.component_dialog.ComponentDialog.persisted_dialog_state
