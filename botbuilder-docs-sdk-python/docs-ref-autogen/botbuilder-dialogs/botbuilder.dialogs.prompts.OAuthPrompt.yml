### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.dialogs.prompts.OAuthPrompt.begin_dialog
  - botbuilder.dialogs.prompts.OAuthPrompt.continue_dialog
  - botbuilder.dialogs.prompts.OAuthPrompt.get_user_token
  - botbuilder.dialogs.prompts.OAuthPrompt.sign_out_user
  - botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_CALLER
  - botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_EXPIRES
  - botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_OPTIONS
  - botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_STATE
  class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: botbuilder.dialogs.dialog.Dialog
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: OAuthPrompt
  source:
    id: OAuthPrompt
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 56
  summary: ''
  syntax:
    content: 'OAuthPrompt(dialog_id: str, settings: botbuilder.dialogs.prompts.oauth_prompt_settings.OAuthPromptSettings,
      validator: typing.Callable[botbuilder.dialogs.prompts.prompt_validator_context.PromptValidatorContext,
      typing.Awaitable[bool]] = None)'
  type: class
  uid: botbuilder.dialogs.prompts.OAuthPrompt
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.begin_dialog
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: botbuilder.dialogs.prompts.prompt_options.PromptOptions = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: begin_dialog
  remarks: 'If the task is successful, the result indicates whether the prompt is
    still active after the turn

    has been processed.

    '
  source:
    id: begin_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 122
  summary: 'Starts an authentication prompt dialog. Called when an authentication
    prompt dialog is pushed onto the

    dialog stack and is being activated.'
  syntax:
    content: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
      options: botbuilder.dialogs.prompts.prompt_options.PromptOptions = None) ->
      botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The dialog context for the current turn of the conversation
      id: dialog_context
      isRequired: true
      type:
      - botbuilder.dialogs.prompts.DialogContext
    - description: Optional, additional information to pass to the prompt being started
      id: options
      isRequired: true
      type:
      - botbuilder.dialogs.prompts.PromptOptions
    return:
      description: Dialog turn result
      type:
      - :class`:*DialogTurnResult*
  type: method
  uid: botbuilder.dialogs.prompts.OAuthPrompt.begin_dialog
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.continue_dialog
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  namewithoutparameters: continue_dialog
  remarks: 'If the task is successful, the result indicates whether the dialog is
    still

    active after the turn has been processed by the dialog.

    The prompt generally continues to receive the user''s replies until it accepts
    the

    user''s reply as valid input for the prompt.

    '
  source:
    id: continue_dialog
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 190
  summary: Continues a dialog. Called when a prompt dialog is the active dialog and
    the user replied with a new activity.
  syntax:
    content: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
      -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
    parameters:
    - description: The dialog context for the current turn of the conversation
      id: dialog_context
      isRequired: true
      type:
      - botbuilder.dialogs.prompts.DialogContext
    return:
      description: Dialog turn result
      type:
      - <xref:botbuilder.dialogs.prompts.DialogTurnResult>
  type: method
  uid: botbuilder.dialogs.prompts.OAuthPrompt.continue_dialog
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.get_user_token
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: 'get_user_token(context: botbuilder.core.turn_context.TurnContext, code: str
    = None) -> botbuilder.schema._models_py3.TokenResponse'
  namewithoutparameters: get_user_token
  remarks: 'If the task is successful and the user already has a token or the user
    successfully signs in,

    the result contains the user''s token.

    '
  source:
    id: get_user_token
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 254
  summary: Gets the user's tokeN.
  syntax:
    content: 'get_user_token(context: botbuilder.core.turn_context.TurnContext, code:
      str = None) -> botbuilder.schema._models_py3.TokenResponse'
    parameters:
    - description: Context for the current turn of conversation with the user
      id: context
      isRequired: true
      type:
      - botbuilder.dialogs.prompts.TurnContext
    - description: (Optional) Optional user entered code to validate.
      id: code
      isRequired: true
      type:
      - str
    return:
      description: A response that includes the user's token
      type:
      - <xref:botbuilder.dialogs.prompts.TokenResponse>
  type: method
  uid: botbuilder.dialogs.prompts.OAuthPrompt.get_user_token
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.sign_out_user
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: 'sign_out_user(context: botbuilder.core.turn_context.TurnContext)'
  namewithoutparameters: sign_out_user
  remarks: 'If the task is successful and the user already has a token or the user
    successfully signs in,

    the result contains the user''s token.

    '
  source:
    id: sign_out_user
    path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
    remote:
      branch: master
      path: ./libraries/botbuilder-dialogs\botbuilder\dialogs\prompts\oauth_prompt.py
      repo: https://github.com/microsoft/botbuilder-python
    startLine: 287
  summary: Signs out the user
  syntax:
    content: 'sign_out_user(context: botbuilder.core.turn_context.TurnContext)'
    parameters:
    - description: Context for the current turn of conversation with the user
      id: context
      isRequired: true
      type:
      - botbuilder.dialogs.prompts.TurnContext
    return:
      description: A task representing the work queued to execute
  type: method
  uid: botbuilder.dialogs.prompts.OAuthPrompt.sign_out_user
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_CALLER
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: PERSISTED_CALLER
  syntax:
    content: PERSISTED_CALLER = 'caller'
  type: attribute
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_CALLER
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_EXPIRES
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: PERSISTED_EXPIRES
  syntax:
    content: PERSISTED_EXPIRES = 'expires'
  type: attribute
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_EXPIRES
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_OPTIONS
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: PERSISTED_OPTIONS
  syntax:
    content: PERSISTED_OPTIONS = 'options'
  type: attribute
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_OPTIONS
- class: botbuilder.dialogs.prompts.OAuthPrompt
  fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_STATE
  langs:
  - python
  module: botbuilder.dialogs.prompts
  name: PERSISTED_STATE
  syntax:
    content: PERSISTED_STATE = 'state'
  type: attribute
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_STATE
references:
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.begin_dialog
  isExternal: false
  name: 'begin_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext,
    options: botbuilder.dialogs.prompts.prompt_options.PromptOptions = None) -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.begin_dialog
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.continue_dialog
  isExternal: false
  name: 'continue_dialog(dialog_context: botbuilder.dialogs.dialog_context.DialogContext)
    -> botbuilder.dialogs.dialog_turn_result.DialogTurnResult'
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.continue_dialog
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.get_user_token
  isExternal: false
  name: 'get_user_token(context: botbuilder.core.turn_context.TurnContext, code: str
    = None) -> botbuilder.schema._models_py3.TokenResponse'
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.get_user_token
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.sign_out_user
  isExternal: false
  name: 'sign_out_user(context: botbuilder.core.turn_context.TurnContext)'
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.sign_out_user
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_CALLER
  isExternal: false
  name: PERSISTED_CALLER
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_CALLER
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_EXPIRES
  isExternal: false
  name: PERSISTED_EXPIRES
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_EXPIRES
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_OPTIONS
  isExternal: false
  name: PERSISTED_OPTIONS
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_OPTIONS
- fullName: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_STATE
  isExternal: false
  name: PERSISTED_STATE
  parent: botbuilder.dialogs.prompts.OAuthPrompt
  uid: botbuilder.dialogs.prompts.OAuthPrompt.PERSISTED_STATE
