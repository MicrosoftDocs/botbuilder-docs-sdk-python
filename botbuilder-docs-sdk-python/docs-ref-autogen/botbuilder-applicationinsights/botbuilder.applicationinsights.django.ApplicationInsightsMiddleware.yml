### YamlMime:PythonClass
uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware
name: ApplicationInsightsMiddleware
fullName: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware
module: botbuilder.applicationinsights.django
inheritances:
- builtins.object
summary: "This class is a Django middleware that automatically enables request and\
  \ exception telemetry.  Django versions\n1.7 and newer are supported.\nTo enable,\
  \ add this class to your settings.py file in MIDDLEWARE_CLASSES (pre-1.10) or MIDDLEWARE\
  \ (1.10 and newer):\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\"\
  : [], \"dupnames\": [], \"backrefs\": [], \"force\": false, \"highlight_args\":\
  \ {}, \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false}\
  \ -->\n\n````python\n\n   # If on Django < 1.10\n   MIDDLEWARE_CLASSES = [\n   \
  \    # ... or whatever is below for you ...\n       'django.middleware.security.SecurityMiddleware',\n\
  \       'django.contrib.sessions.middleware.SessionMiddleware',\n       'django.middleware.common.CommonMiddleware',\n\
  \       'django.middleware.csrf.CsrfViewMiddleware',\n       'django.contrib.auth.middleware.AuthenticationMiddleware',\n\
  \       'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    \
  \   'django.contrib.messages.middleware.MessageMiddleware',\n       'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\
  \       # ... or whatever is above for you ...\n       'botbuilder.applicationinsights.django.ApplicationInsightsMiddleware',\
  \   # Add this middleware to the end\n   ]\n\n   # If on Django >= 1.10\n   MIDDLEWARE\
  \ = [\n       # ... or whatever is below for you ...\n       'django.middleware.security.SecurityMiddleware',\n\
  \       'django.contrib.sessions.middleware.SessionMiddleware',\n       'django.middleware.common.CommonMiddleware',\n\
  \       'django.middleware.csrf.CsrfViewMiddleware',\n       'django.contrib.auth.middleware.AuthenticationMiddleware',\n\
  \       'django.contrib.messages.middleware.MessageMiddleware',\n       'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\
  \       # ... or whatever is above for you ...\n       'botbuilder.applicationinsights.django.ApplicationInsightsMiddleware',\
  \   # Add this middleware to the end\n   ]\n   ````\nAnd then, add the following\
  \ to your settings.py file:\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
  names\": [], \"dupnames\": [], \"backrefs\": [], \"force\": false, \"highlight_args\"\
  : {}, \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false}\
  \ -->\n\n````python\n\n   APPLICATION_INSIGHTS = {\n       # (required) Your Application\
  \ Insights instrumentation key\n       'ikey': \"00000000-0000-0000-0000-000000000000\"\
  ,\n\n       # (optional) By default, request names are logged as the request method\n\
  \       # and relative path of the URL.  To log the fully-qualified view names\n\
  \       # instead, set this to True.  Defaults to False.\n       'use_view_name':\
  \ True,\n\n       # (optional) To log arguments passed into the views as custom\
  \ properties,\n       # set this to True.  Defaults to False.\n       'record_view_arguments':\
  \ True,\n\n       # (optional) Exceptions are logged by default, to disable, set\
  \ this to False.\n       'log_exceptions': False,\n\n       # (optional) Events\
  \ are submitted to Application Insights asynchronously.\n       # send_interval\
  \ specifies how often the queue is checked for items to submit.\n       # send_time\
  \ specifies how long the sender waits for new input before recycling\n       # the\
  \ background thread.\n       'send_interval': 1.0, # Check every second\n      \
  \ 'send_time': 3.0, # Wait up to 3 seconds for an event\n\n       # (optional, uncommon)\
  \ If you must send to an endpoint other than the\n       # default endpoint, specify\
  \ it here:\n       'endpoint': \"https://dc.services.visualstudio.com/v2/track\"\
  ,\n   }\n   ````\nOnce these are in place, each request will have an *appinsights*\
  \ object placed on it.\nThis object will have the following properties:\n* *client*:\
  \ This is an instance of the <xref:applicationinsights.TelemetryClient> type, which\
  \ will submit telemetry to the same instrumentation key, and will parent each telemetry\
  \ item to the current request. \n\n* *request*: This is the <xref:applicationinsights.channel.contracts.RequestData>\
  \ instance for the current request.  You can modify properties on this object during\
  \ the handling of the current request. It will be submitted when the request has\
  \ finished. \n\n* *context*: This is the <xref:applicationinsights.channel.TelemetryContext>\
  \ object for the current ApplicationInsights sender.\nThese properties will be present\
  \ even when *DEBUG* is *True*, but it may not submit telemetry unless\n*debug_ikey*\
  \ is set in *APPLICATION_INSIGHTS*, above."
constructor:
  syntax: ApplicationInsightsMiddleware(get_response=None)
methods:
- uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware.process_exception
  name: process_exception
  signature: process_exception(request, exception)
  parameters:
  - name: request
    isRequired: true
  - name: exception
    isRequired: true
- uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware.process_request
  name: process_request
  signature: process_request(request)
  parameters:
  - name: request
    isRequired: true
- uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware.process_response
  name: process_response
  signature: process_response(request, response)
  parameters:
  - name: request
    isRequired: true
  - name: response
    isRequired: true
- uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware.process_template_response
  name: process_template_response
  signature: process_template_response(request, response)
  parameters:
  - name: request
    isRequired: true
  - name: response
    isRequired: true
- uid: botbuilder.applicationinsights.django.ApplicationInsightsMiddleware.process_view
  name: process_view
  signature: process_view(request, view_func, view_args, view_kwargs)
  parameters:
  - name: request
    isRequired: true
  - name: view_func
    isRequired: true
  - name: view_args
    isRequired: true
  - name: view_kwargs
    isRequired: true
