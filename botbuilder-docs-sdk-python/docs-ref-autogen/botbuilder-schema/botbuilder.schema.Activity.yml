### YamlMime:PythonClass
uid: botbuilder.schema.Activity
name: Activity
fullName: botbuilder.schema.Activity
module: botbuilder.schema
inheritances:
- msrest.serialization.Model
summary: 'An Activity is the basic communication type for the Bot Framework 3.0

  protocol.'
constructor:
  syntax: 'Activity(*, type=None, id: Optional[str] = None, timestamp=None, local_timestamp=None,
    local_timezone: Optional[str] = None, service_url: Optional[str] = None, channel_id:
    Optional[str] = None, from_property=None, conversation=None, recipient=None, text_format=None,
    attachment_layout=None, members_added=None, members_removed=None, reactions_added=None,
    reactions_removed=None, topic_name: Optional[str] = None, history_disclosed: Optional[bool]
    = None, locale: Optional[str] = None, text: Optional[str] = None, speak: Optional[str]
    = None, input_hint=None, summary: Optional[str] = None, suggested_actions=None,
    attachments=None, entities=None, channel_data=None, action: Optional[str] = None,
    reply_to_id: Optional[str] = None, label: Optional[str] = None, value_type: Optional[str]
    = None, value=None, name: Optional[str] = None, relates_to=None, code=None, expiration=None,
    importance=None, delivery_mode=None, listen_for=None, text_highlights=None, semantic_action=None,
    caller_id: Optional[str] = None, **kwargs) -> None'
  parameters:
  - name: type
    description: 'Contains the activity type. Possible values include:

      ''message'', ''contactRelationUpdate'', ''conversationUpdate'', ''typing'',

      ''endOfConversation'', ''event'', ''invoke'', ''deleteUserData'', ''messageUpdate'',

      ''messageDelete'', ''installationUpdate'', ''messageReaction'', ''suggestion'',

      ''trace'', ''handoff'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.ActivityTypes>'
  - name: id
    description: 'Contains an ID that uniquely identifies the activity on the

      channel.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: timestamp
    description: 'Contains the date and time that the message was sent, in

      UTC, expressed in ISO-8601 format.'
    types:
    - <xref:botbuilder.schema.datetime>
  - name: local_timestamp
    description: 'Contains the local date and time of the message

      expressed in ISO-8601 format.

      For example, 2016-09-23T13:07:49.4714686-07:00.'
    types:
    - <xref:botbuilder.schema.datetime>
  - name: local_timezone
    description: 'Contains the name of the local timezone of the message,

      expressed in IANA Time Zone database format.

      For example, America/Los_Angeles.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: service_url
    description: 'Contains the URL that specifies the channel''s service

      endpoint. Set by the channel.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: channel_id
    description: 'Contains an ID that uniquely identifies the channel.

      Set by the channel.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: from_property
    description: Identifies the sender of the message.
    types:
    - <xref:botframework.connector.models.ChannelAccount>
  - name: conversation
    description: 'Identifies the conversation to which the activity

      belongs.'
    types:
    - <xref:botframework.connector.models.ConversationAccount>
  - name: recipient
    description: Identifies the recipient of the message.
    types:
    - <xref:botframework.connector.models.ChannelAccount>
  - name: text_format
    description: 'Format of text fields Default:markdown. Possible

      values include: ''markdown'', ''plain'', ''xml'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.TextFormatTypes>'
  - name: attachment_layout
    description: 'The layout hint for multiple attachments.

      Default: list. Possible values include: ''list'', ''carousel'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str'
  - name: members_added
    description: The collection of members added to the conversation.
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.ChannelAccount>]'
  - name: members_removed
    description: 'The collection of members removed from the

      conversation.'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.ChannelAccount>]'
  - name: reactions_added
    description: 'The collection of reactions added to the

      conversation.'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.MessageReaction>]'
  - name: reactions_removed
    description: 'The collection of reactions removed from the

      conversation.'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.MessageReaction>]'
  - name: topic_name
    description: The updated topic name of the conversation.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: history_disclosed
    description: 'Indicates whether the prior history of the

      channel is disclosed.'
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  - name: locale
    description: 'A locale name for the contents of the text field.

      The locale name is a combination of an ISO 639 two- or three-letter

      culture code associated with a language

      and an ISO 3166 two-letter subculture code associated with a country or

      region.

      The locale name can also correspond to a valid BCP-47 language tag.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: text
    description: The text content of the message.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: speak
    description: The text to speak.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: input_hint
    description: 'Indicates whether your bot is accepting,

      expecting, or ignoring user input after the message is delivered to the

      client. Possible values include: ''acceptingInput'', ''ignoringInput'',

      ''expectingInput'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.InputHints>'
  - name: summary
    description: The text to display if the channel cannot render cards.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: suggested_actions
    description: The suggested actions for the activity.
    types:
    - <xref:botframework.connector.models.SuggestedActions>
  - name: attachments
    description: Attachments
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.Attachment>]'
  - name: entities
    description: 'Represents the entities that were mentioned in the

      message.'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.Entity>]'
  - name: channel_data
    description: Contains channel-specific content.
    types:
    - '[object](https://docs.python.org/3.6/library/functions.html#object)'
  - name: action
    description: 'Indicates whether the recipient of a contactRelationUpdate

      was added or removed from the sender''s contact list.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: reply_to_id
    description: 'Contains the ID of the message to which this message

      is a reply.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: label
    description: A descriptive label for the activity.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: value_type
    description: The type of the activity's value object.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: value
    description: A value that is associated with the activity.
    types:
    - '[object](https://docs.python.org/3.6/library/functions.html#object)'
  - name: name
    description: 'The name of the operation associated with an invoke or event

      activity.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: relates_to
    description: A reference to another conversation or activity.
    types:
    - <xref:botframework.connector.models.ConversationReference>
  - name: code
    description: 'The a code for endOfConversation activities that indicates

      why the conversation ended. Possible values include: ''unknown'',

      ''completedSuccessfully'', ''userCancelled'', ''botTimedOut'',

      ''botIssuedInvalidMessage'', ''channelFailed'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.EndOfConversationCodes>'
  - name: expiration
    description: 'The time at which the activity should be considered to

      be "expired" and should not be presented to the recipient.'
    types:
    - <xref:botbuilder.schema.datetime>
  - name: importance
    description: 'The importance of the activity. Possible values

      include: ''low'', ''normal'', ''high'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.ActivityImportance>'
  - name: delivery_mode
    description: 'A delivery hint to signal to the recipient alternate

      delivery paths for the activity.

      The default delivery mode is "default". Possible values include: ''normal'',

      ''notification'', ''expectReplies'', ''ephemeral'''
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:botframework.connector.models.DeliveryModes>'
  - name: listen_for
    description: 'List of phrases and references that speech and language

      priming systems should listen for'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[[str](https://docs.python.org/3.6/library/stdtypes.html#str)]'
  - name: text_highlights
    description: 'The collection of text fragments to highlight when

      the activity contains a ReplyToId value.'
    types:
    - '[list](https://docs.python.org/3.6/library/stdtypes.html#list)[<xref:botframework.connector.models.TextHighlight>]'
  - name: semantic_action
    description: 'An optional programmatic action accompanying this

      request'
    types:
    - <xref:botframework.connector.models.SemanticAction>
  - name: caller_id
    description: 'A string containing an IRI identifying the caller of a

      bot. This field is not intended to be transmitted over the wire, but is

      instead populated by bots and clients based on cryptographically

      verifiable data that asserts the identity of the callers (e.g. tokens).'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
methods:
- uid: botbuilder.schema.Activity.apply_conversation_reference
  name: apply_conversation_reference
  summary: 'Updates this activity with the delivery information from an existing ConversationReference


    incoming activity, where the bot is the recipient; otherwise, False.

    Default is False, and the activity will show the bot as the sender.'
  signature: 'apply_conversation_reference(reference: botbuilder.schema._models_py3.ConversationReference,
    is_incoming: bool = False)'
  parameters:
  - name: reference
    isRequired: true
  - name: is_incoming
    defaultValue: 'False'
  return:
    description: his activity, updated with the delivery information.
  remarks: 'Call GetConversationReference on an incoming

    activity to get a conversation reference that you can then use to update an

    outgoing activity with the correct delivery information.

    '
- uid: botbuilder.schema.Activity.as_contact_relation_update_activity
  name: as_contact_relation_update_activity
  summary: 'Returns this activity as a ContactRelationUpdateActivity object;

    or None, if this is not that type of activity.'
  signature: as_contact_relation_update_activity()
  return:
    description: This activity as a message activity; or None.
- uid: botbuilder.schema.Activity.as_conversation_update_activity
  name: as_conversation_update_activity
  summary: 'Returns this activity as a ConversationUpdateActivity object;

    or None, if this is not that type of activity.'
  signature: as_conversation_update_activity()
  return:
    description: This activity as a conversation update activity; or None.
- uid: botbuilder.schema.Activity.as_end_of_conversation_activity
  name: as_end_of_conversation_activity
  summary: 'Returns this activity as an EndOfConversationActivity object;

    or None, if this is not that type of activity.'
  signature: as_end_of_conversation_activity()
  return:
    description: This activity as an end of conversation activity; or None.
- uid: botbuilder.schema.Activity.as_event_activity
  name: as_event_activity
  summary: 'Returns this activity as an EventActivity object;

    or None, if this is not that type of activity.'
  signature: as_event_activity()
  return:
    description: This activity as an event activity; or None.
- uid: botbuilder.schema.Activity.as_handoff_activity
  name: as_handoff_activity
  summary: 'Returns this activity as a HandoffActivity object;

    or None, if this is not that type of activity.'
  signature: as_handoff_activity()
  return:
    description: This activity as a handoff activity; or None.
- uid: botbuilder.schema.Activity.as_installation_update_activity
  name: as_installation_update_activity
  summary: 'Returns this activity as an InstallationUpdateActivity object;

    or None, if this is not that type of activity.'
  signature: as_installation_update_activity()
  return:
    description: This activity as an installation update activity; or None.
- uid: botbuilder.schema.Activity.as_invoke_activity
  name: as_invoke_activity
  summary: 'Returns this activity as an InvokeActivity object;

    or None, if this is not that type of activity.'
  signature: as_invoke_activity()
  return:
    description: This activity as an invoke activity; or None.
- uid: botbuilder.schema.Activity.as_message_activity
  name: as_message_activity
  summary: 'Returns this activity as a MessageActivity object;

    or None, if this is not that type of activity.'
  signature: as_message_activity()
  return:
    description: This activity as a message activity; or None.
- uid: botbuilder.schema.Activity.as_message_delete_activity
  name: as_message_delete_activity
  summary: 'Returns this activity as a MessageDeleteActivity object;

    or None, if this is not that type of activity.'
  signature: as_message_delete_activity()
  return:
    description: This activity as a message delete request; or None.
- uid: botbuilder.schema.Activity.as_message_reaction_activity
  name: as_message_reaction_activity
  summary: 'Returns this activity as a MessageReactionActivity object;

    or None, if this is not that type of activity.'
  signature: as_message_reaction_activity()
  return:
    description: This activity as a message reaction activity; or None.
- uid: botbuilder.schema.Activity.as_message_update_activity
  name: as_message_update_activity
  summary: 'Returns this activity as an MessageUpdateActivity object;

    or None, if this is not that type of activity.'
  signature: as_message_update_activity()
  return:
    description: This activity as a message update request; or None.
- uid: botbuilder.schema.Activity.as_suggestion_activity
  name: as_suggestion_activity
  summary: 'Returns this activity as a SuggestionActivity object;

    or None, if this is not that type of activity.'
  signature: as_suggestion_activity()
  return:
    description: This activity as a suggestion activity; or None.
- uid: botbuilder.schema.Activity.as_trace_activity
  name: as_trace_activity
  summary: 'Returns this activity as a TraceActivity object;

    or None, if this is not that type of activity.'
  signature: as_trace_activity()
  return:
    description: This activity as a trace activity; or None.
- uid: botbuilder.schema.Activity.as_typing_activity
  name: as_typing_activity
  summary: 'Returns this activity as a TypingActivity object;

    or null, if this is not that type of activity.'
  signature: as_typing_activity()
  return:
    description: This activity as a typing activity; or null.
- uid: botbuilder.schema.Activity.create_contact_relation_update_activity
  name: create_contact_relation_update_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as aContactRelationUpdateActivity
    object.
  signature: create_contact_relation_update_activity()
  return:
    description: The new contact relation update activity.
- uid: botbuilder.schema.Activity.create_conversation_update_activity
  name: create_conversation_update_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as a
    ConversationUpdateActivity object.
  signature: create_conversation_update_activity()
  return:
    description: The new conversation update activity.
- uid: botbuilder.schema.Activity.create_end_of_conversation_activity
  name: create_end_of_conversation_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as an
    EndOfConversationActivity object.
  signature: create_end_of_conversation_activity()
  return:
    description: The new end of conversation activity.
- uid: botbuilder.schema.Activity.create_event_activity
  name: create_event_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as an
    EventActivity object.
  signature: create_event_activity()
  return:
    description: The new event activity.
- uid: botbuilder.schema.Activity.create_handoff_activity
  name: create_handoff_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as a
    HandoffActivity object.
  signature: create_handoff_activity()
  return:
    description: The new handoff activity.
- uid: botbuilder.schema.Activity.create_invoke_activity
  name: create_invoke_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as an
    InvokeActivity object.
  signature: create_invoke_activity()
  return:
    description: The new invoke activity.
- uid: botbuilder.schema.Activity.create_message_activity
  name: create_message_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as a
    MessageActivity object.
  signature: create_message_activity()
  return:
    description: The new message activity.
- uid: botbuilder.schema.Activity.create_reply
  name: create_reply
  summary: Creates a new message activity as a response to this activity.
  signature: 'create_reply(text: Optional[str] = None, locale: Optional[str] = None)'
  parameters:
  - name: text
    description: The text of the reply.
    defaultValue: None
  - name: locale
    description: The language code for the text.
    defaultValue: None
  return:
    description: The new message activity.
  remarks: 'The new activity sets up routing information based on this activity.

    '
- uid: botbuilder.schema.Activity.create_trace
  name: create_trace
  summary: 'Creates a new trace activity based on this activity.


    Default is the name of type of the value.

    :param label: Optional, a descriptive label for this trace operation.'
  signature: 'create_trace(name: str, value: object = None, value_type: Optional[str]
    = None, label: Optional[str] = None)'
  parameters:
  - name: name
    isRequired: true
  - name: value
    defaultValue: None
  - name: value_type
    defaultValue: None
  - name: label
    defaultValue: None
  return:
    description: The new trace activity.
- uid: botbuilder.schema.Activity.create_trace_activity
  name: create_trace_activity
  summary: 'Creates an instance of the <xref:botbuilder.schema.Activity> class as
    a TraceActivity object.


    Default is the name of type of the value.

    :param label: Optional, a descriptive label for this trace operation.'
  signature: 'create_trace_activity(name: str, value: object = None, value_type: Optional[str]
    = None, label: Optional[str] = None)'
  parameters:
  - name: name
    isRequired: true
  - name: value
    defaultValue: None
  - name: value_type
    defaultValue: None
  - name: label
    defaultValue: None
  return:
    description: The new trace activity.
- uid: botbuilder.schema.Activity.create_typing_activity
  name: create_typing_activity
  summary: Creates an instance of the <xref:botbuilder.schema.Activity> class as a
    TypingActivity object.
  signature: create_typing_activity()
  return:
    description: The new typing activity.
- uid: botbuilder.schema.Activity.get_conversation_reference
  name: get_conversation_reference
  summary: Creates a ConversationReference based on this activity.
  signature: get_conversation_reference()
  return:
    description: A conversation reference for the conversation that contains this
      activity.
- uid: botbuilder.schema.Activity.get_mentions
  name: get_mentions
  summary: Resolves the mentions from the entities of this activity.
  signature: get_mentions() -> [<class 'botbuilder.schema._models_py3.Mention'>]
  return:
    description: The array of mentions; or an empty array, if none are found.
  remarks: 'This method is defined on the <xref:botbuilder.schema.Activity> class,
    but is only intended

    for use with a message activity, where the activity Activity.Type is set to

    ActivityTypes.Message.

    '
- uid: botbuilder.schema.Activity.get_reply_conversation_reference
  name: get_reply_conversation_reference
  summary: 'Create a ConversationReference based on this Activity''s Conversation
    info

    and the ResourceResponse from sending an activity.'
  signature: 'get_reply_conversation_reference(reply: botbuilder.schema._models_py3.ResourceResponse)
    -> botbuilder.schema._models_py3.ConversationReference'
  parameters:
  - name: reply
    description: ResourceResponse returned from send_activity.
    isRequired: true
  return:
    description: A ConversationReference that can be stored and used later to delete
      or update the activity.
- uid: botbuilder.schema.Activity.has_content
  name: has_content
  summary: Indicates whether this activity has content.
  signature: has_content() -> bool
  return:
    description: True, if this activity has any content to send; otherwise, false.
  remarks: 'This method is defined on the <xref:botbuilder.schema.Activity> class,
    but is only intended

    for use with a message activity, where the activity Activity.Type is set to

    ActivityTypes.Message.

    '
- uid: botbuilder.schema.Activity.is_from_streaming_connection
  name: is_from_streaming_connection
  summary: 'Determine if the Activity was sent via an Http/Https connection or Streaming

    This can be determined by looking at the service_url property:

    (1) All channels that send messages via http/https are not streaming

    (2) Channels that send messages via streaming have a ServiceUrl that does not
    begin with http/https.'
  signature: is_from_streaming_connection() -> bool
  return:
    description: True if the Activity originated from a streaming connection.
