### YamlMime:UniversalReference
api_name: []
items:
- children:
  - botbuilder.schema.Activity.create_reply
  class: botbuilder.schema.Activity
  fullName: botbuilder.schema.Activity
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: botbuilder.schema
  name: Activity
  summary: 'An Activity is the basic communication type for the Bot Framework 3.0

    protocol.'
  syntax:
    content: 'Activity(*, type=None, id: str = None, timestamp=None, local_timestamp=None,
      local_timezone: str = None, service_url: str = None, channel_id: str = None,
      from_property=None, conversation=None, recipient=None, text_format=None, attachment_layout=None,
      members_added=None, members_removed=None, reactions_added=None, reactions_removed=None,
      topic_name: str = None, history_disclosed: bool = None, locale: str = None,
      text: str = None, speak: str = None, input_hint=None, summary: str = None, suggested_actions=None,
      attachments=None, entities=None, channel_data=None, action: str = None, reply_to_id:
      str = None, label: str = None, value_type: str = None, value=None, name: str
      = None, relates_to=None, code=None, expiration=None, importance=None, delivery_mode=None,
      listen_for=None, text_highlights=None, semantic_action=None, caller_id: str
      = None, **kwargs) -> None'
    parameters:
    - description: 'Contains the activity type. Possible values include:

        ''message'', ''contactRelationUpdate'', ''conversationUpdate'', ''typing'',

        ''endOfConversation'', ''event'', ''invoke'', ''deleteUserData'', ''messageUpdate'',

        ''messageDelete'', ''installationUpdate'', ''messageReaction'', ''suggestion'',

        ''trace'', ''handoff'''
      id: type
      type:
      - str
      - botframework.connector.models.ActivityTypes
    - description: 'Contains an ID that uniquely identifies the activity on the

        channel.'
      id: id
      type:
      - str
    - description: 'Contains the date and time that the message was sent, in

        UTC, expressed in ISO-8601 format.'
      id: timestamp
      type:
      - datetime
    - description: 'Contains the local date and time of the message

        expressed in ISO-8601 format.

        For example, 2016-09-23T13:07:49.4714686-07:00.'
      id: local_timestamp
      type:
      - datetime
    - description: 'Contains the name of the local timezone of the message,

        expressed in IANA Time Zone database format.

        For example, America/Los_Angeles.'
      id: local_timezone
      type:
      - str
    - description: 'Contains the URL that specifies the channel''s service

        endpoint. Set by the channel.'
      id: service_url
      type:
      - str
    - description: 'Contains an ID that uniquely identifies the channel.

        Set by the channel.'
      id: channel_id
      type:
      - str
    - description: Identifies the sender of the message.
      id: from_property
      type:
      - botframework.connector.models.ChannelAccount
    - description: 'Identifies the conversation to which the activity

        belongs.'
      id: conversation
      type:
      - botframework.connector.models.ConversationAccount
    - description: Identifies the recipient of the message.
      id: recipient
      type:
      - botframework.connector.models.ChannelAccount
    - description: 'Format of text fields Default:markdown. Possible

        values include: ''markdown'', ''plain'', ''xml'''
      id: text_format
      type:
      - str
      - botframework.connector.models.TextFormatTypes
    - description: 'The layout hint for multiple attachments.

        Default: list. Possible values include: ''list'', ''carousel'''
      id: attachment_layout
      type:
      - str
      - botframework.connector.models.AttachmentLayoutTypes
    - description: The collection of members added to the conversation.
      id: members_added
      type:
      - list[botframework.connector.models.ChannelAccount]
    - description: 'The collection of members removed from the

        conversation.'
      id: members_removed
      type:
      - list[botframework.connector.models.ChannelAccount]
    - description: 'The collection of reactions added to the

        conversation.'
      id: reactions_added
      type:
      - list[botframework.connector.models.MessageReaction]
    - description: 'The collection of reactions removed from the

        conversation.'
      id: reactions_removed
      type:
      - list[botframework.connector.models.MessageReaction]
    - description: The updated topic name of the conversation.
      id: topic_name
      type:
      - str
    - description: 'Indicates whether the prior history of the

        channel is disclosed.'
      id: history_disclosed
      type:
      - bool
    - description: 'A locale name for the contents of the text field.

        The locale name is a combination of an ISO 639 two- or three-letter

        culture code associated with a language

        and an ISO 3166 two-letter subculture code associated with a country or

        region.

        The locale name can also correspond to a valid BCP-47 language tag.'
      id: locale
      type:
      - str
    - description: The text content of the message.
      id: text
      type:
      - str
    - description: The text to speak.
      id: speak
      type:
      - str
    - description: 'Indicates whether your bot is accepting,

        expecting, or ignoring user input after the message is delivered to the

        client. Possible values include: ''acceptingInput'', ''ignoringInput'',

        ''expectingInput'''
      id: input_hint
      type:
      - str
      - botframework.connector.models.InputHints
    - description: The text to display if the channel cannot render cards.
      id: summary
      type:
      - str
    - description: The suggested actions for the activity.
      id: suggested_actions
      type:
      - botframework.connector.models.SuggestedActions
    - description: Attachments
      id: attachments
      type:
      - list[botframework.connector.models.Attachment]
    - description: 'Represents the entities that were mentioned in the

        message.'
      id: entities
      type:
      - list[botframework.connector.models.Entity]
    - description: Contains channel-specific content.
      id: channel_data
      type:
      - object
    - description: 'Indicates whether the recipient of a contactRelationUpdate

        was added or removed from the sender''s contact list.'
      id: action
      type:
      - str
    - description: 'Contains the ID of the message to which this message

        is a reply.'
      id: reply_to_id
      type:
      - str
    - description: A descriptive label for the activity.
      id: label
      type:
      - str
    - description: The type of the activity's value object.
      id: value_type
      type:
      - str
    - description: A value that is associated with the activity.
      id: value
      type:
      - object
    - description: 'The name of the operation associated with an invoke or event

        activity.'
      id: name
      type:
      - str
    - description: A reference to another conversation or activity.
      id: relates_to
      type:
      - botframework.connector.models.ConversationReference
    - description: 'The a code for endOfConversation activities that indicates

        why the conversation ended. Possible values include: ''unknown'',

        ''completedSuccessfully'', ''userCancelled'', ''botTimedOut'',

        ''botIssuedInvalidMessage'', ''channelFailed'''
      id: code
      type:
      - str
      - botframework.connector.models.EndOfConversationCodes
    - description: 'The time at which the activity should be considered to

        be "expired" and should not be presented to the recipient.'
      id: expiration
      type:
      - datetime
    - description: 'The importance of the activity. Possible values

        include: ''low'', ''normal'', ''high'''
      id: importance
      type:
      - str
      - botframework.connector.models.ActivityImportance
    - description: 'A delivery hint to signal to the recipient alternate

        delivery paths for the activity.

        The default delivery mode is "default". Possible values include: ''normal'',

        ''notification'', ''expectReplies'', ''ephemeral'''
      id: delivery_mode
      type:
      - str
      - botframework.connector.models.DeliveryModes
    - description: 'List of phrases and references that speech and language

        priming systems should listen for'
      id: listen_for
      type:
      - list[str]
    - description: 'The collection of text fragments to highlight when

        the activity contains a ReplyToId value.'
      id: text_highlights
      type:
      - list[botframework.connector.models.TextHighlight]
    - description: 'An optional programmatic action accompanying this

        request'
      id: semantic_action
      type:
      - botframework.connector.models.SemanticAction
    - description: 'A string containing an IRI identifying the caller of a

        bot. This field is not intended to be transmitted over the wire, but is

        instead populated by bots and clients based on cryptographically

        verifiable data that asserts the identity of the callers (e.g. tokens).'
      id: caller_id
      type:
      - str
  type: class
  uid: botbuilder.schema.Activity
- class: botbuilder.schema.Activity
  fullName: botbuilder.schema.Activity.create_reply
  langs:
  - python
  module: botbuilder.schema
  name: 'create_reply(text: str = None, locale: str = None)'
  namewithoutparameters: create_reply
  syntax:
    content: 'create_reply(text: str = None, locale: str = None)'
  type: method
  uid: botbuilder.schema.Activity.create_reply
references:
- fullName: botbuilder.schema.Activity.create_reply
  isExternal: false
  name: 'create_reply(text: str = None, locale: str = None)'
  parent: botbuilder.schema.Activity
  uid: botbuilder.schema.Activity.create_reply
- fullName: list[botframework.connector.models.ChannelAccount]
  name: list[ChannelAccount]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.ChannelAccount
    name: ChannelAccount
    uid: botframework.connector.models.ChannelAccount
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.ChannelAccount]
- fullName: list[botframework.connector.models.MessageReaction]
  name: list[MessageReaction]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.MessageReaction
    name: MessageReaction
    uid: botframework.connector.models.MessageReaction
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.MessageReaction]
- fullName: list[botframework.connector.models.MessageReaction]
  name: list[MessageReaction]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.MessageReaction
    name: MessageReaction
    uid: botframework.connector.models.MessageReaction
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.MessageReaction]
- fullName: list[botframework.connector.models.Attachment]
  name: list[Attachment]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.Attachment
    name: Attachment
    uid: botframework.connector.models.Attachment
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.Attachment]
- fullName: list[botframework.connector.models.Entity]
  name: list[Entity]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.Entity
    name: Entity
    uid: botframework.connector.models.Entity
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.Entity]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[botframework.connector.models.TextHighlight]
  name: list[TextHighlight]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: botframework.connector.models.TextHighlight
    name: TextHighlight
    uid: botframework.connector.models.TextHighlight
  - fullName: ']'
    name: ']'
  uid: list[botframework.connector.models.TextHighlight]
