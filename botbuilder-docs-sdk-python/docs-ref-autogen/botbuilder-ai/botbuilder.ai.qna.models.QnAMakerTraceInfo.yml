### YamlMime:PythonClass
uid: botbuilder.ai.qna.models.QnAMakerTraceInfo
name: QnAMakerTraceInfo
fullName: botbuilder.ai.qna.models.QnAMakerTraceInfo
module: botbuilder.ai.qna.models
inheritances:
- builtins.object
summary: 'Represents all the trace info that we collect from the QnAMaker Middleware.


  # Parameters:


  message: Message which instigated the query to QnA Maker.


  query_results: Results that QnA Maker returned.


  knowledge_base_id: ID of the knowledge base that is being queried.


  score_threshold: The minimum score threshold, used to filter returned results.


  top: Number of ranked results that are asked to be returned.


  strict_filters: Filters used on query.


  context: (Optional) The context from which the QnA was extracted.


  qna_id: (Optional) Id of the current question asked.


  is_test: (Optional) A value indicating whether to call test or prod environment
  of knowledgebase.


  ranker_types: (Optional) Ranker types.'
constructor:
  syntax: 'QnAMakerTraceInfo(message: Activity, query_results: List[QueryResult],
    knowledge_base_id: str, score_threshold: float, top: int, strict_filters: List[Metadata],
    context: QnARequestContext = None, qna_id: int = None, is_test: bool = False,
    ranker_type: str = ''Default'')'
  parameters:
  - name: message
  - name: query_results
  - name: knowledge_base_id
  - name: score_threshold
  - name: top
  - name: strict_filters
  - name: context
    defaultValue: None
  - name: qna_id
    defaultValue: None
  - name: is_test
    defaultValue: 'False'
  - name: ranker_type
    defaultValue: Default
