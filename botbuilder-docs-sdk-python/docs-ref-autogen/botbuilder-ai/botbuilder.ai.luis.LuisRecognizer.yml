### YamlMime:PythonClass
uid: botbuilder.ai.luis.LuisRecognizer
name: LuisRecognizer
fullName: botbuilder.ai.luis.LuisRecognizer
module: botbuilder.ai.luis
inheritances:
- botbuilder.core.recognizer.Recognizer
summary: 'A LUIS based implementation of <xref:botbuilder.core.Recognizer>.


  Initializes a new instance of the <xref:botbuilder.ai.luis.LuisRecognizer> class.'
constructor:
  syntax: 'LuisRecognizer(application: LuisApplication | str, prediction_options:
    LuisRecognizerOptionsV2 | LuisRecognizerOptionsV3 | LuisPredictionOptions | None
    = None, include_api_results: bool = False)'
  parameters:
  - name: application
    description: The LUIS application to use to recognize text.
    isRequired: true
    types:
    - <xref:botbuilder.ai.luis.LuisApplication>
  - name: prediction_options
    description: The LUIS prediction options to use, defaults to None.
    defaultValue: None
    types:
    - <xref:botbuilder.ai.luis.LuisPredictionOptions>, <xref:optional>
  - name: include_api_results
    description: True to include raw LUIS API response, defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>, <xref:optional>
methods:
- uid: botbuilder.ai.luis.LuisRecognizer.fill_luis_event_properties
  name: fill_luis_event_properties
  summary: 'Fills the event properties for LuisResult event for telemetry.

    These properties are logged when the recognizer is called.'
  signature: 'fill_luis_event_properties(recognizer_result: RecognizerResult, turn_context:
    TurnContext, telemetry_properties: Dict[str, str] | None = None) -> Dict[str,
    str]'
  parameters:
  - name: recognizer_result
    description: Last activity sent from user.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult>
  - name: turn_context
    description: Context object containing information for a single turn of conversation
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: telemetry_properties
    description: 'Additional properties to be logged to telemetry with the LuisResult
      event, defaults

      to None.'
    defaultValue: None
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>], <xref:optional>
  return:
    description: 'A dictionary sent as "Properties" to <xref:botbuilder.core.BotTelemetryClient.track_event>
      for the

      BotMessageSend event.'
    types:
    - <xref:*typing.Dict>[<xref:str>, <xref:str>]<xref:*>
- uid: botbuilder.ai.luis.LuisRecognizer.on_recognizer_result
  name: on_recognizer_result
  summary: Invoked prior to a LuisResult being logged.
  signature: 'on_recognizer_result(recognizer_result: RecognizerResult, turn_context:
    TurnContext, telemetry_properties: Dict[str, str] | None = None, telemetry_metrics:
    Dict[str, float] | None = None)'
  parameters:
  - name: recognizer_result
    description: The LuisResult for the call.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult>
  - name: turn_context
    description: Context object containing information for a single turn of conversation
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: telemetry_properties
    description: 'Additional properties to be logged to telemetry with the LuisResult
      event, defaults

      to None.'
    defaultValue: None
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>], <xref:optional>
  - name: telemetry_metrics
    description: 'Additional metrics to be logged to telemetry with the LuisResult
      event, defaults

      to None.'
    defaultValue: None
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:float>], <xref:optional>
- uid: botbuilder.ai.luis.LuisRecognizer.recognize
  name: recognize
  summary: Return results of the analysis (suggested actions and intents).
  signature: 'async recognize(turn_context: TurnContext, telemetry_properties: Dict[str,
    str] | None = None, telemetry_metrics: Dict[str, float] | None = None, luis_prediction_options:
    LuisPredictionOptions | None = None) -> RecognizerResult'
  parameters:
  - name: turn_context
    description: Context object containing information for a single conversation turn
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: telemetry_properties
    description: 'Additional properties to be logged to telemetry with the LuisResult
      event, defaults

      to None.'
    defaultValue: None
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>], <xref:optional>
  - name: telemetry_metrics
    description: 'Additional metrics to be logged to telemetry with the LuisResult
      event, defaults to

      None.'
    defaultValue: None
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:float>], <xref:optional>
  - name: luis_prediction_options
    defaultValue: None
  return:
    description: The LUIS results of the analysis of the current message text in the
      current turn's context activity.
    types:
    - <xref:botbuilder.core.RecognizerResult>
- uid: botbuilder.ai.luis.LuisRecognizer.top_intent
  name: top_intent
  summary: Returns the name of the top scoring intent from a set of LUIS results.
  signature: 'static top_intent(results: RecognizerResult, default_intent: str = ''None'',
    min_score: float = 0.0) -> str'
  parameters:
  - name: results
    description: Result set to be searched.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult>
  - name: default_intent
    description: Intent name to return should a top intent be found, defaults to None.
    defaultValue: None
    types:
    - <xref:str>, <xref:optional>
  - name: min_score
    description: 'Minimum score needed for an intent to be considered as a top intent.
      If all intents in the set

      are below this threshold then the *defaultIntent* is returned, defaults to 0.0.'
    defaultValue: '0.0'
    types:
    - <xref:float>, <xref:optional>
  return:
    description: The top scoring intent name.
    types:
    - <xref:str>
  exceptions:
  - type: TypeError
attributes:
- uid: botbuilder.ai.luis.LuisRecognizer.luis_trace_label
  name: luis_trace_label
  signature: 'luis_trace_label: str = ''Luis Trace'''
- uid: botbuilder.ai.luis.LuisRecognizer.luis_trace_type
  name: luis_trace_type
  signature: 'luis_trace_type: str = ''https://www.luis.ai/schemas/trace'''
