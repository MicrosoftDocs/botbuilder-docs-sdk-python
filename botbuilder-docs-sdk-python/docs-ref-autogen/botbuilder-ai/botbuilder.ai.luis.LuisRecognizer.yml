### YamlMime:PythonClass
uid: botbuilder.ai.luis.LuisRecognizer
name: LuisRecognizer
fullName: botbuilder.ai.luis.LuisRecognizer
module: botbuilder.ai.luis
inheritances:
- botbuilder.core.recognizer.Recognizer
summary: A LUIS based implementation of <xref:botbuilder.core.Recognizer.yml>.
constructor:
  syntax: 'LuisRecognizer(application: Union[botbuilder.ai.luis.luis_application.LuisApplication,
    str], prediction_options: Optional[Union[botbuilder.ai.luis.luis_recognizer_options_v2.LuisRecognizerOptionsV2,
    botbuilder.ai.luis.luis_recognizer_options_v3.LuisRecognizerOptionsV3, botbuilder.ai.luis.luis_prediction_options.LuisPredictionOptions]]
    = None, include_api_results: bool = False)'
methods:
- uid: botbuilder.ai.luis.LuisRecognizer.fill_luis_event_properties
  name: fill_luis_event_properties
  summary: 'Fills the event properties for LuisResult event for telemetry.

    These properties are logged when the recognizer is called.'
  signature: 'fill_luis_event_properties(recognizer_result: botbuilder.core.recognizer_result.RecognizerResult,
    turn_context: botbuilder.core.turn_context.TurnContext, telemetry_properties:
    Optional[Dict[str, str]] = None)'
  parameters:
  - name: recognizer_result
    description: Last activity sent from user.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult.yml>
  - name: turn_context
    description: Context object containing information for a single turn of conversation
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext.yml>
  - name: telemetry_properties
    description: Additional properties to be logged to telemetry with the LuisResult
      event, defaults
    defaultValue: None
    types:
    - <xref:typing.Dict[str, str].yml>, optional
  return:
    description: "A dictionary sent as \u201CProperties\u201D to <xref:botbuilder.core.BotTelemetryClient.track_event.yml>\
      \ for the\nBotMessageSend event."
    types:
    - '*typing.Dict[str, str]*'
- uid: botbuilder.ai.luis.LuisRecognizer.on_recognizer_result
  name: on_recognizer_result
  summary: Invoked prior to a LuisResult being logged.
  signature: 'on_recognizer_result(recognizer_result: botbuilder.core.recognizer_result.RecognizerResult,
    turn_context: botbuilder.core.turn_context.TurnContext, telemetry_properties:
    Optional[Dict[str, str]] = None, telemetry_metrics: Optional[Dict[str, float]]
    = None)'
  parameters:
  - name: recognizer_result
    description: The LuisResult for the call.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult.yml>
  - name: turn_context
    description: Context object containing information for a single turn of conversation
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext.yml>
  - name: telemetry_properties
    description: Additional properties to be logged to telemetry with the LuisResult
      event, defaults
    defaultValue: None
    types:
    - <xref:typing.Dict[str, str].yml>, optional
  - name: telemetry_metrics
    description: Additional metrics to be logged to telemetry with the LuisResult
      event, defaults
    defaultValue: None
    types:
    - <xref:typing.Dict[str, float].yml>, optional
- uid: botbuilder.ai.luis.LuisRecognizer.recognize
  name: recognize
  summary: Return results of the analysis (suggested actions and intents).
  signature: 'recognize(turn_context: botbuilder.core.turn_context.TurnContext, telemetry_properties:
    Optional[Dict[str, str]] = None, telemetry_metrics: Optional[Dict[str, float]]
    = None, luis_prediction_options: Optional[botbuilder.ai.luis.luis_prediction_options.LuisPredictionOptions]
    = None)'
  parameters:
  - name: turn_context
    description: Context object containing information for a single conversation turn
      with a user.
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext.yml>
  - name: telemetry_properties
    description: Additional properties to be logged to telemetry with the LuisResult
      event, defaults
    defaultValue: None
    types:
    - <xref:typing.Dict[str, str].yml>, optional
  - name: telemetry_metrics
    description: Additional metrics to be logged to telemetry with the LuisResult
      event, defaults to
    defaultValue: None
    types:
    - <xref:typing.Dict[str, float].yml>, optional
  - name: luis_prediction_options
    defaultValue: None
  return:
    description: "The LUIS results of the analysis of the current message text in\
      \ the current turn\u2019s context activity."
    types:
    - <xref:botbuilder.core.RecognizerResult.yml>
- uid: botbuilder.ai.luis.LuisRecognizer.top_intent
  name: top_intent
  summary: Returns the name of the top scoring intent from a set of LUIS results.
  signature: 'top_intent(results: botbuilder.core.recognizer_result.RecognizerResult,
    default_intent: str = ''None'', min_score: float = 0.0)'
  parameters:
  - name: results
    description: Result set to be searched.
    isRequired: true
    types:
    - <xref:botbuilder.core.RecognizerResult.yml>
  - name: default_intent
    description: Intent name to return should a top intent be found, defaults to None.
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str), <xref:botbuilder.ai.luis.optional.yml>'
  - name: min_score
    description: Minimum score needed for an intent to be considered as a top intent.
      If all intents in the set
    defaultValue: '0.0'
    types:
    - '[float](https://docs.python.org/3.6/library/functions.html#float), <xref:botbuilder.ai.luis.optional.yml>'
  return:
    description: The top scoring intent name.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
attributes:
- uid: botbuilder.ai.luis.LuisRecognizer.luis_trace_label
  name: luis_trace_label
  signature: 'luis_trace_label: str = ''Luis Trace'''
- uid: botbuilder.ai.luis.LuisRecognizer.luis_trace_type
  name: luis_trace_type
  signature: 'luis_trace_type: str = ''https://www.luis.ai/schemas/trace'''
